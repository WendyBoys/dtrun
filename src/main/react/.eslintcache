[{"C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\index.js":"1","C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\App.jsx":"2","C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\datasource\\Datasource.jsx":"3","C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\dashboard\\Index.jsx":"4","C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\user\\Register.jsx":"5","C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\user\\Login.jsx":"6","C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\datasource\\Show.jsx":"7","C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\datasource\\Create.jsx":"8","C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\user\\Modify.jsx":"9","C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\datasource\\Update.jsx":"10","C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\dashboard\\Dashboard.jsx":"11","C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\common\\Nav.jsx":"12","C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\common\\Right.jsx":"13","C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\common\\Header.jsx":"14","C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\movetask\\MoveTask.jsx":"15","C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\movetask\\Create.jsx":"16"},{"size":267,"mtime":1609381363699,"results":"17","hashOfConfig":"18"},{"size":2184,"mtime":1609581247543,"results":"19","hashOfConfig":"18"},{"size":683,"mtime":1609502122699,"results":"20","hashOfConfig":"18"},{"size":11019,"mtime":1609581046761,"results":"21","hashOfConfig":"18"},{"size":4088,"mtime":1609502122669,"results":"22","hashOfConfig":"18"},{"size":5090,"mtime":1609502122714,"results":"23","hashOfConfig":"18"},{"size":5651,"mtime":1609579365341,"results":"24","hashOfConfig":"18"},{"size":6196,"mtime":1609502122655,"results":"25","hashOfConfig":"18"},{"size":3988,"mtime":1609082755000,"results":"26","hashOfConfig":"18"},{"size":7754,"mtime":1609502122676,"results":"27","hashOfConfig":"18"},{"size":180,"mtime":1609502122662,"results":"28","hashOfConfig":"18"},{"size":2236,"mtime":1609502122683,"results":"29","hashOfConfig":"18"},{"size":5629,"mtime":1607591781520,"results":"30","hashOfConfig":"18"},{"size":14587,"mtime":1607591901431,"results":"31","hashOfConfig":"18"},{"size":435,"mtime":1609082755000,"results":"32","hashOfConfig":"18"},{"size":6225,"mtime":1609502122708,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1inv8dc",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\index.js",[],["75","76"],"C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\App.jsx",[],"C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\datasource\\Datasource.jsx",[],"C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\dashboard\\Index.jsx",["77","78","79","80","81"],"import React from 'react';\nimport { NavLink, Redirect, Route, Switch } from 'react-router-dom';\nimport Dashboard from './Dashboard';\nimport Datasource from '../datasource/Datasource';\nimport MoveTask from '../movetask/MoveTask';\nimport axios from \"axios\";\nimport cookie from 'react-cookies'\nimport { Layout, Menu, Avatar, Drawer, Button, Radio, Space, Image, Row, Col, notification, Form, Input } from 'antd';\nimport { LaptopOutlined, NotificationOutlined, EditOutlined, UserSwitchOutlined, UploadOutlined } from '@ant-design/icons';\n\nconst { SubMenu } = Menu;\nconst { Header, Content, Sider } = Layout;\nconst tailLayout = {\n    wrapperCol: {\n        offset: 5,\n        span: 15,\n    },\n};\nconst layout = {\n    labelCol: {\n        span: 5,\n    },\n    wrapperCol: {\n        span: 15,\n    },\n};\n\nexport default class Index extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            userName: '',\n            iconUrl: '',\n            mainDrawer: false,\n            mainDrawerWidth: 250,\n            messageDrawer: false,\n            passwordDrawer: false,\n            placement: 'right'\n        };\n    }\n\n\n    componentDidMount() {\n        axios.get('/user/getCurrentUser').then((response) => {\n            var result = response.data.message;\n            if (result == 'Success') {\n                const user = response.data.data;\n                this.setState({ userName: user.userName, iconUrl: user.iconUrl })\n            } else {\n\n            }\n        });\n    }\n\n\n    logout() {\n        cookie.remove('token');\n        this.props.history.push('/login')\n        notification['success']({\n            message: '通知',\n            description:\n                '注销成功',\n            duration: 2,\n        });\n    };\n\n    onFinish = (values) => {\n        axios.post('/user/modifyPassword', {\n            oldPassword: values.oldPassword,\n            newPassword: values.newPassword\n        }).then((response) => {\n            var result = response.data.message;\n            if (result == 'Success') {\n                this.setState({\n                    passwordDrawer: false,\n                    mainDrawerWidth: 250,\n                });\n                notification['success']({\n                    message: '通知',\n                    description:\n                        '修改成功',\n                    duration: 1,\n                });\n            } else {\n                notification['error']({\n                    message: '通知',\n                    description:\n                        '旧密码错误,请重新输入',\n                    duration: 1,\n                });\n            }\n        });\n    }\n\n    quit() {\n        this.setState({\n            passwordDrawer: false,\n            mainDrawerWidth: 250,\n        });\n    }\n\n    showMainDrawer = () => {\n        this.setState({\n            mainDrawer: true,\n        });\n    };\n\n    onMainDrawerClose = () => {\n        this.setState({\n            mainDrawer: false,\n        });\n    };\n\n    showMessageDrawer = () => {\n        this.setState({\n            messageDrawer: true,\n            mainDrawerWidth: 500,\n        });\n    };\n    onMessageDrawerClose = () => {\n        this.setState({\n            messageDrawer: false,\n            mainDrawerWidth: 250,\n        });\n    };\n\n    showPasswordDrawer = () => {\n        this.setState({\n            passwordDrawer: true,\n            mainDrawerWidth: 500,\n        });\n    };\n    onPasswordDrawerClose = () => {\n        this.setState({\n            passwordDrawer: false,\n            mainDrawerWidth: 250,\n        });\n    };\n\n    render() {\n        const { userName, iconUrl, placement, mainDrawer, mainDrawerWidth } = this.state;\n        return <div style={{ height: '100%' }}>\n            <Drawer\n                title={'欢迎回来，' + userName}\n                placement={placement}\n                closable={false}\n                onClose={this.onMainDrawerClose}\n                visible={mainDrawer}\n                key={placement}\n                width={mainDrawerWidth}\n            >\n                <Image\n                    style={{ borderRadius: '100%', width: '100%' }}\n                    width=\"202px\"\n                    height=\"202px\"\n                    src={iconUrl}\n                />\n                <Menu\n                    mode=\"inline\"\n                >\n                    <Menu.Item key=\"1\" onClick={this.showMessageDrawer} icon={<UserSwitchOutlined />}>\n                        个人中心\n                    </Menu.Item>\n                    <Menu.Item key=\"2\" onClick={this.showPasswordDrawer} icon={<EditOutlined />}>\n                        修改密码</Menu.Item>\n                    <Menu.Item key=\"3\" onClick={() => this.logout()} icon={<UploadOutlined style={{ transform: 'rotate(90deg)' }} />}>\n                        注销\n                    </Menu.Item>\n                </Menu>\n\n                <Drawer\n                    title=\"个人中心\"\n                    width={400}\n                    closable={false}\n                    onClose={this.onMessageDrawerClose}\n                    visible={this.state.messageDrawer}\n                >\n                    个人中心\n          </Drawer>\n\n                <Drawer\n                    title=\"修改密码\"\n                    width={400}\n                    closable={false}\n                    onClose={this.onPasswordDrawerClose}\n                    visible={this.state.passwordDrawer}\n                >\n                    <Form\n                        {...layout}\n                        name=\"basic\"\n                        onFinish={this.onFinish}\n                    >\n                        <Form.Item\n                            label=\"旧密码\"\n                            name=\"oldPassword\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: '请输旧密码',\n                                },\n                            ]}\n                        >\n\n                            <Input type='text'\n                                placeholder=\"请输入旧密码\" />\n                        </Form.Item>\n                        <Form.Item\n                            label=\"新密码\"\n                            name=\"newPassword\"\n                            rules={[\n                                {\n                                    compare: '11111',\n                                    required: true,\n                                    message: '请输新密码',\n                                },\n                            ]}\n                        >\n\n                            <input placeholder=\"请输新密码\" type=\"text\" id=\"basic_dtsName\"\n                                class=\"ant-input\" value=\"\" />\n                        </Form.Item>\n\n                        <Form.Item {...tailLayout}>\n                            <Button type=\"primary\" htmlType=\"submit\" style={{ marginRight: '10px' }}\n                            >\n                                确定\n                                </Button>\n\n                            <Button htmlType=\"button\" onClick={() => this.quit()}>\n                                取消\n                                </Button>\n                        </Form.Item>\n                    </Form>\n                </Drawer>\n\n            </Drawer>\n            <Layout style={{ height: '100%' }}>\n                <Header className=\"header\" style={{ position: 'relative', left: '0', padding: '0', background: '#12202e' }}>\n                    <Row>\n                        <span style={{ color: '#ffffff', textAlign: 'center', width: '200px', fontSize: '20px' }}>DTRUN迁移系统</span>\n                        <div onClick={this.showMainDrawer} style={{ position: 'absolute', right: '45px', cursor: 'pointer' }}>\n                            <Avatar size={45} src={iconUrl} />\n                            <span style={{ marginLeft: '5px', color: '#ffffff', fontSize: '15px' }}>{userName}</span>\n                        </div>\n                    </Row>\n\n                </Header>\n                <Layout>\n                    <Sider width={200} className=\"site-layout-background\" style={{\n                        overflow: 'auto',\n                        height: '100vh',\n                        position: 'fixed',\n                        left: 0,\n                    }}>\n                        <Menu\n                            mode=\"inline\"\n                            // defaultSelectedKeys={['1']}\n                            style={{ height: '100%', borderRight: 0 }}\n                        >\n                            <Menu.Item key=\"1\" icon={<LaptopOutlined />}>\n                                <NavLink to=\"/dashboard\">运维大盘</NavLink>\n                            </Menu.Item>\n                            <Menu.Item key=\"2\" icon={<LaptopOutlined />}>\n                                <NavLink to=\"/datasource/show\">数据源管理</NavLink></Menu.Item>\n                            <Menu.Item key=\"3\" icon={<LaptopOutlined />}>\n                                <NavLink to=\"/movetask\"> 迁移任务管理</NavLink>\n                            </Menu.Item>\n                            <SubMenu key=\"sub2\" icon={<LaptopOutlined />} title=\"subnav 2\">\n                                <Menu.Item key=\"5\">option5</Menu.Item>\n                                <Menu.Item key=\"6\">option6</Menu.Item>\n                                <Menu.Item key=\"7\">option7</Menu.Item>\n                                <Menu.Item key=\"8\">option8</Menu.Item>\n                            </SubMenu>\n                            <SubMenu key=\"sub3\" icon={<NotificationOutlined />} title=\"subnav 3\">\n                                <Menu.Item key=\"9\">option9</Menu.Item>\n                                <Menu.Item key=\"10\">option10</Menu.Item>\n                                <Menu.Item key=\"11\">option11</Menu.Item>\n                                <Menu.Item key=\"12\">option12</Menu.Item>\n                            </SubMenu>\n                        </Menu>\n                    </Sider>\n                    <Layout style={{ padding: '0 14px 14px 14px', height: '100%' }}>\n\n                        <Content\n                            className=\"site-layout-background\"\n                            style={{\n                                marginLeft: 200,\n                                height: '100%'\n                            }}\n                        >\n                            <Switch>\n                                <Route path=\"/dashboard\" component={Dashboard} />\n                                <Route path=\"/datasource\" component={Datasource} />\n                                <Route path=\"/movetask\" component={MoveTask} />\n                                <Redirect to=\"/dashboard\" />\n                            </Switch>\n                        </Content>\n                    </Layout>\n                </Layout>\n            </Layout>\n        </div>\n    }\n}","C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\user\\Register.jsx",["82","83"],"import React from 'react';\nimport socket from '../../images/socket.svg';\nimport axios from 'axios';\nimport {Button, Col, Form, Input, notification, Row} from 'antd';\nimport {AuditOutlined, LockOutlined, UserOutlined} from '@ant-design/icons';\nimport {NavLink} from \"react-router-dom\";\n\n\nexport default class Register extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: '注册',\n        }\n    }\n\n\n    onFinish = (values) => {\n        axios.post('/user/register', {\n            account: values.account,\n            password: values.password,\n            registerCode: values.registerCode,\n        }).then((response) => {\n            const result = response.data.message;\n            if (result == 'Success') {\n                this.props.history.push('/login')\n            }\n            notification[result == 'Success' ? 'success' : 'error']({\n                message: '通知',\n                description:\n                response.data.data,\n                duration: 2,\n            });\n        });\n\n    };\n\n    render() {\n        return (\n            <div >\n                <Row  style={{marginBottom: '5%', paddingTop: '20px', minHeight: '200px'}}>\n                    <Col span={6}></Col>\n                    <Col span={12}><img src={socket} alt=\"\" width=\"100%\" height=\"200px\"/></Col>\n                    <Col span={6}></Col>\n                </Row>\n                <Row >\n                    <Col span={6}></Col>\n                    <Col span={12}>\n                            <Form\n                                name=\"normal_login\"\n                                className=\"login-form\"\n                                initialValues={{remember: true}}\n                                onFinish={this.onFinish}\n                            >\n                                <Form.Item\n                                    name=\"account\"\n                                    rules={[{required: true, message: '请输入账号'}]}\n                                >\n                                    <Input prefix={<UserOutlined className=\"site-form-item-icon\"/>}\n                                           placeholder=\"账号\"/>\n                                </Form.Item>\n                                <Form.Item\n                                    name=\"password\"\n                                    rules={[{required: true, message: '请输入密码'}]}\n                                >\n                                    <Input.Password\n                                        prefix={<LockOutlined className=\"site-form-item-icon\"/>}\n                                        type=\"password\"\n                                        placeholder=\"密码\"\n                                    />\n                                </Form.Item>\n                                <Form.Item \n                                    name=\"registerCode\"\n                                    rules={[{required: true, message: '请输入注册码'}]}\n                                >\n                                    <Input\n                                        prefix={<AuditOutlined/>}\n                                        placeholder=\"注册码\"/>\n                                </Form.Item>\n                                <Form.Item>\n\n\n                                    <NavLink className=\"login-form-forgot\" to=\"/login\">\n                                        已有账号？去登录\n                                    </NavLink>\n                                </Form.Item>\n\n                                <Form.Item>\n                                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\"\n                                            style={{marginBottom: '20px'}}>\n                                        立即注册\n                                    </Button>\n                                </Form.Item>\n                            </Form>\n                    </Col>\n                    <Col span={6}></Col>\n                </Row>       \n            </div>);\n\n\n    }\n}\n\n\n","C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\user\\Login.jsx",["84","85","86"],"import React from 'react';\nimport socket from '../../images/socket.svg';\nimport axios from 'axios';\nimport cookie from 'react-cookies'\nimport {Button, Checkbox, Col, Form, Input, notification, Row} from 'antd';\nimport {LockOutlined, UserOutlined} from '@ant-design/icons';\n\nexport default class Login extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: '登录',\n        }\n    }\n\n\n    onFinish = (values) => {\n        axios.post('/user/login', {\n            account: values.account,\n            password: values.password,\n        }).then((response) => {\n            var result = response.data.message;\n            var token = response.data.data;\n            if (result == 'Success') {\n                let inFifteenMinutes = new Date(new Date().getTime() + 7 * 24 * 3600 * 1000);\n                cookie.save('token', token, {expires: inFifteenMinutes})\n                this.props.history.push({pathname: '/index'})\n            } else if (result == 'LoginRefuse') {\n                notification['error']({\n                    message: '通知',\n                    description:\n                        '账号已被封禁',\n                    duration: 2,\n                });\n            } else {\n                notification['error']({\n                    message: '通知',\n                    description:\n                        '账号或密码错误',\n                    duration: 2,\n                });\n            }\n\n        });\n\n    };\n\n    register() {\n        this.props.history.push('/register')\n    }\n\n    render() {\n        return (\n            <div>\n                <Row style={{marginBottom: '5%', paddingTop: '20px', minHeight: '200px'}}>\n                    <Col span={6}></Col>\n                    <Col span={12}><img src={socket} alt=\"\" width=\"100%\" height=\"200px\"/></Col>\n                    <Col span={6}>\n                        <div>\n\n                        </div>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col span={6}></Col>\n                    <Col span={12}>\n                        <div>\n                            <Form\n                                name=\"normal_login\"\n                                className=\"login-form\"\n                                initialValues={{remember: true}}\n                                onFinish={this.onFinish}\n                            >\n                                <Form.Item\n                                    name=\"account\"\n                                    rules={[{required: true, message: '请输入账号'}]}\n                                >\n                                    <Input prefix={<UserOutlined className=\"site-form-item-icon\"/>}\n                                           placeholder=\"账号\"/>\n                                </Form.Item>\n                                <Form.Item\n                                    name=\"password\"\n                                    rules={[{required: true, message: '请输入密码'}]}\n                                >\n                                    <Input.Password\n                                        prefix={<LockOutlined className=\"site-form-item-icon\"/>}\n                                        type=\"password\"\n                                        placeholder=\"密码\"\n                                    />\n                                </Form.Item>\n\n                                <Form.Item>\n                                    <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n                                        <Checkbox>记住我</Checkbox>\n                                    </Form.Item>\n\n                                    <a className=\"login-form-forgot\" href=\"\">\n                                        忘记密码\n                                    </a>\n                                </Form.Item>\n\n                                <Form.Item>\n                                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\"\n                                            style={{marginBottom: '20px'}}>\n                                        登录\n                                    </Button>\n                                    <Button type=\"primary\" htmlType=\"button\" className=\"login-form-button\"\n                                            onClick={() => this.register()}>\n                                        立即注册\n                                    </Button>\n                                </Form.Item>\n                            </Form>\n                        </div>\n                    </Col>\n                    <Col span={6}></Col>\n                </Row>\n                <Row  style={{textAlign: 'center'}}>\n                    <Col span={6}></Col>\n                    <Col span={12} style={{position: 'absolute',left:'45%', bottom: '10px'}}><a\n                        href=\"http://beian.miit.gov.cn\">豫ICP备2020036555号</a></Col>\n                    <Col span={6}></Col>\n                </Row>\n\n\n            </div>);\n\n\n    }\n}\n\n\n","C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\datasource\\Show.jsx",["87","88","89"],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Button, Modal, notification, Space, Spin, Table } from 'antd';\n\n\nconst Show = (props) => {\n    const [list, setList] = useState([]);\n    const [dtsId, setDtsId] = useState([]);\n    const [visible, setVisible] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [confirmLoading, setConfirmLoading] = useState(false);\n    const [modalText, setModalText] = useState('');\n    const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n\n\n    const handleCancel = () => {\n        setVisible(false);\n    };\n\n\n    useEffect(() => {\n        fentch();\n    }, []);\n\n\n    const fentch = () => {\n        setLoading(true)\n        axios.get('/dtsource/findAll').then((response) => {\n            var result = response.data.message;\n            var data = response.data.data;\n            if (result == 'Success') {\n                setList(data);\n                setLoading(false)\n            } else {\n                setLoading(false)\n            }\n        });\n    }\n\n\n    const toCreate = () => {\n        props.history.push('/datasource/create')\n    }\n\n    const testDts = (id) => {\n        setLoading(true)\n        axios.post('/dtsource/connection', {\n            id: id,\n        }).then((response) => {\n            var result = response.data.message;\n            if (result == 'Success') {\n                setLoading(false)\n                notification['success']({\n                    message: '通知',\n                    description:\n                        '测试成功',\n                    duration: 1,\n                });\n            } else {\n                notification['error']({\n                    message: '通知',\n                    description:\n                        '测试失败，请检查您的参数设置',\n                    duration: 1,\n                });\n            }\n            setLoading(false)\n        });\n    }\n\n\n    const deleteDts = (id, dtSourceName) => {\n        const selecteLength = selectedRowKeys.length;\n        if (selecteLength === 0) {\n            setModalText('您确定要删除数据源 ' + dtSourceName + ' 吗?');\n            setDtsId(id);\n        } else {\n            setModalText('您确定要删除选中的' + selecteLength + '项数据源吗?');\n            setDtsId(selectedRowKeys);\n        }\n        setVisible(true);\n\n    }\n\n    const handleOk = () => {\n        setConfirmLoading(true);\n        axios.delete('/dtsource/delete', {\n            data: {\n                id: dtsId,\n            }\n        }).then((response) => {\n            var result = response.data.message;\n            if (result == 'Success') {\n                setVisible(false);\n                setConfirmLoading(false);\n                fentch();\n            } else {\n                notification['error']({\n                    message: '通知',\n                    description:\n                        '删除失败！',\n                    duration: 1,\n                });\n            }\n        });\n    };\n\n\n    const updateDts = (id) => {\n        props.history.push('/datasource/update/' + id)\n    }\n\n\n\n    const columns = [\n        {\n            title: '数据源名称',\n            dataIndex: 'dtSourceName',\n            render: (text, record) => <span style={{ color: '#0062FF', cursor: 'pointer' }} onClick={() => updateDts(record.id)}>{text}</span>,\n        },\n        {\n            title: '数据源类型',\n            dataIndex: 'dtSourceType',\n        },\n        {\n            title: '创建时间',\n            dataIndex: 'createTime',\n        },\n        {\n            title: '操作',\n            dataIndex: 'option',\n            render: (text, record) => (\n                <Space size=\"middle\">\n                    <span style={{ color: '#0062FF', cursor: 'pointer', marginRight: '10px' }} onClick={() => testDts(record.id)}>测试</span>\n                    <span style={{ color: '#0062FF', cursor: 'pointer', marginRight: '10px' }} onClick={() => deleteDts(record.id, record.dtSourceName)}>删除</span>\n                </Space>\n            )\n        },\n    ];\n\n    const onSelectChange = selectedRowKeys => {\n        setSelectedRowKeys(selectedRowKeys)\n        console.log(selectedRowKeys)\n    };\n\n    const rowSelection = {\n        selectedRowKeys,\n        onChange: onSelectChange,\n    };\n\n    return ((\n        <Spin size=\"large\" spinning={loading}>\n            <div style={{ height: '50px', paddingTop: '10px' }}><Button type=\"primary\" onClick={() => toCreate()} style={{ background: '#00b4ed', position: 'absolute', right: '11px', zIndex: '999', borderRadius: '5px' }}>创建</Button></div>\n            <div style={{ height: '10px', background: '#f0f2f5' }}></div>\n            <div style={{ padding: '10px', background: '#ffffff' }}>\n                <div>\n                    <Table rowSelection={rowSelection} bordered\n                        columns={columns}\n                        dataSource={list}\n                        pagination={{\n                            defaultPageSize: 10,\n                            pageSizeOptions: [10, 20, 50, 100]\n                        }}\n                    />\n                </div>\n\n                <Modal\n                    title=\"删除数据源\"\n                    okText=\"确定\"\n                    cancelText=\"取消\"\n                    visible={visible}\n                    onOk={handleOk}\n                    confirmLoading={confirmLoading}\n                    onCancel={handleCancel}\n                >\n                    <p>{modalText}</p>\n                </Modal>\n            </div>\n        </Spin>\n\n    ));\n\n}\n\n\nexport default Show;\n","C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\datasource\\Create.jsx",["90","91","92"],"import React from 'react';\nimport axios from 'axios';\nimport {Button, Col, Form, Input, notification, Row, Select} from 'antd';\n\nconst { Option } = Select;\n\nconst layout = {\n    labelCol: {\n        span: 3,\n    },\n    wrapperCol: {\n        span: 12,\n    },\n};\n\nconst tailLayout = {\n    wrapperCol: {\n        offset: 3,\n        span: 16,\n    },\n};\nexport default class Create extends React.Component {\n    formRef = React.createRef();\n    constructor(props) {\n        super(props);\n    }\n\n    test() {\n        this.formRef.current.validateFields()\n            .then(values => {\n                axios.post('/dtsource/testconnection', {\n                    dataSourceType: values.dtsType,\n                    accessKey: values.accessKey,\n                    accessSecret: values.accessSecret,\n                    region: values.region,\n                }).then((response) => {\n                    var result = response.data.message;\n                    if (result == 'Success') {\n                        notification['success']({\n                            message: '通知',\n                            description:\n                                '测试成功',\n                            duration: 1,\n                        });\n                    } else {\n                        notification['error']({\n                            message: '通知',\n                            description:\n                                '测试失败,请检查参数',\n                            duration: 1,\n                        });\n                    }\n                });\n            })\n            .catch(errorInfo => {\n\n            });\n\n    }\n\n\n    quit() {\n        this.props.history.goBack();\n\n    }\n\n\n\n    onFinish = (values) => {\n\n        axios.post('/dtsource/create', {\n            dataSourceName: values.dtsName,\n            dataSourceType: values.dtsType,\n            secretId: values.accessKey,\n            secretKey: values.accessSecret,\n            region: values.region,\n        }).then((response) => {\n            var result = response.data.message;\n            if (result == 'Success') {\n                this.props.history.push('/datasource/show');\n            } else {\n\n            }\n        });\n    };\n\n    render() {\n        return <div style={{padding:'10px'}}>\n            <h2>创建数据源</h2>\n            <Row>\n                <Col span={24}>\n                    <Form\n                        {...layout}\n                        ref={this.formRef}\n                        name=\"basic\"\n                        initialValues={{\n                            remember: true,\n                        }}\n                        onFinish={this.onFinish}\n                    >\n                        <Form.Item\n                            label=\"数据源名称\"\n                            name=\"dtsName\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: '请输入数据源名称',\n                                },\n                            ]}\n                        >\n                            <Input placeholder=\"请输入数据源名称\" />\n                        </Form.Item>\n\n                        <Form.Item name=\"dtsType\" label=\"数据源类型\" rules={[{ required: true, message: '请选择数据源类型' }]}>\n                            <Select\n                                placeholder=\"请选择数据源类型\"\n                                onChange={this.onGenderChange}\n                                allowClear\n                            >\n                                <Option value=\"cos\">COS</Option>\n                                <Option value=\"oss\">OSS</Option>\n                                <Option value=\"obs\">OBS</Option>\n                                <Option value=\"bos\">BOS</Option>\n                            </Select>\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"AccessKey\"\n                            name=\"accessKey\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: '请输入AccessKey',\n                                },\n                            ]}\n                        >\n                            <Input placeholder=\"请输入AccessKey\" />\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"AccessSecret\"\n                            name=\"accessSecret\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: '请输入AccessSecret',\n                                },\n                            ]}\n                        >\n                            <Input placeholder=\"请输入AccessSecret\" />\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"地域\"\n                            name=\"region\"\n                            rules={[\n                                {\n\n                                    message: '请输入地域',\n                                },\n                            ]}\n                        >\n                            <Input placeholder=\"请输入地域\" />\n                        </Form.Item>\n\n                        <Form.Item {...tailLayout}>\n                            <Button type=\"primary\" htmlType=\"submit\" style={{ marginRight: '10px' }}>\n                                确定\n                                    </Button>\n                            <Button htmlType=\"button\" onClick={() => this.test()} style={{ marginRight: '10px' }}>\n                                测试\n                                    </Button>\n                            <Button htmlType=\"button\" onClick={() => this.quit()}>\n                                取消\n                                    </Button>\n                        </Form.Item>\n                    </Form>\n                </Col>\n            \n            </Row>\n        </div>\n\n    }\n}","C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\user\\Modify.jsx",["93"],"import React from 'react';\nimport Nav from '../common/Nav';\nimport {Button, Form, Input} from 'antd';\nimport axios from \"axios/index\";\nimport {notification} from \"antd/lib/index\";\n\n\nconst layout = {\n    labelCol: {\n        span: 3,\n    },\n    wrapperCol: {\n        span: 16,\n    },\n};\n\nconst tailLayout = {\n    wrapperCol: {\n        offset: 3,\n        span: 16,\n    },\n};\n\n\nexport default class Modfiy extends React.Component {\n\n    onFinish = (values) => {\n        axios.post('/user/modifyPassword', {\n            oldPassword: values.oldPassword,\n            newPassword: values.newPassword\n        }).then((response) => {\n            var result = response.data.message;\n            if (result == 'Success') {\n                this.props.history.push('/index');\n                notification['success']({\n                    message: '通知',\n                    description:\n                        '修改成功',\n                    duration: 1,\n                });\n            } else {\n                notification['error']({\n                    message: '通知',\n                    description:\n                        '旧密码错误,请重新输入',\n                    duration: 1,\n                });\n            }\n        });\n    }\n\n    quit() {\n        this.props.history.goBack();\n    }\n\n\n    render() {\n        return (\n            <div className=\"content-wrapper\">\n\n                <Nav/>\n                <div className=\"content-body\">\n\n                    <div id=\"createdts\" className=\"content\">\n                        <div className=\"page-header d-flex justify-content-between\">\n                            <h2>修改密码</h2>\n                        </div>\n                        <Form\n                            {...layout}\n                            ref={this.formRef}\n                            name=\"basic\"\n                            initialValues={{\n                                remember: true,\n                            }}\n                            onFinish={this.onFinish}\n                        >\n                            <Form.Item\n                                label=\"旧密码\"\n                                name=\"oldPassword\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: '请输旧密码',\n                                    },\n                                ]}\n                            >\n\n                                <Input type='text'\n                                       placeholder=\"请输入旧密码\"/>\n                            </Form.Item>\n                            <Form.Item\n                                label=\"新密码\"\n                                name=\"newPassword\"\n                                rules={[\n                                    {\n                                        compare: '11111',\n                                        required: true,\n                                        message: '请输新密码',\n                                    },\n                                ]}\n                            >\n\n                                <input placeholder=\"请输新密码\" type=\"text\" id=\"basic_dtsName\"\n                                       class=\"ant-input\" value=\"\"/>\n                            </Form.Item>\n\n                            <Form.Item {...tailLayout}>\n                                <Button type=\"primary\" htmlType=\"submit\" style={{marginRight: '10px'}}\n                                >\n                                    确定\n                                </Button>\n\n                                <Button htmlType=\"button\" onClick={() => this.quit()}>\n                                    取消\n                                </Button>\n                            </Form.Item>\n                        </Form>\n\n                    </div>\n\n                </div>\n\n            </div>\n\n        )\n\n    }\n}","C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\datasource\\Update.jsx",["94","95","96"],"import React from 'react';\nimport axios from 'axios';\nimport {Button, Col, Form, Input, notification, Row, Select} from 'antd';\n\nconst { Option } = Select;\n\nconst layout = {\n    labelCol: {\n        span: 3,\n    },\n    wrapperCol: {\n        span: 12,\n    },\n};\n\nconst tailLayout = {\n    wrapperCol: {\n        offset: 3,\n        span: 16,\n    },\n};\nexport default class Update extends React.Component {\n    formRef = React.createRef();\n\n    constructor(props) {\n        super(props);\n        this.state = {}\n\n\n    }\n\n\n    componentWillMount() {\n\n        this.getDts()\n\n    }\n\n\n    getDts() {\n        axios.get('/dtsource/getDtSourceById?id=' + this.props.match.params.id).then((response) => {\n            const result = response.data.message;\n            if (result == 'Success') {\n                const data = response.data.data;\n                const dtSourceJson = JSON.parse(data.dtSourceJson);\n                this.formRef.current.setFieldsValue(\n                    {\n                        dtsName: data.dtSourceName,\n                        dtsType: data.dtSourceType,\n                        accessKey: dtSourceJson.accessKey,\n                        accessSecret: dtSourceJson.accessSecret,\n                        region: dtSourceJson.region\n                    },\n                );\n            } else {\n                notification['error']({\n                    message: '通知',\n                    description:\n                        '获取数据源信息失败，请稍后重试',\n                    duration: 1,\n                });\n            }\n        });\n    }\n\n    test() {\n        this.formRef.current.validateFields()\n            .then(values => {\n                axios.post('/dtsource/testconnection', {\n                    dataSourceType: values.dtsType,\n                    accessKey: values.accessKey,\n                    accessSecret: values.accessSecret,\n                    region: values.region,\n                }).then((response) => {\n                    var result = response.data.message;\n                    if (result == 'Success') {\n                        notification['success']({\n                            message: '通知',\n                            description:\n                                '测试成功',\n                            duration: 1,\n                        });\n                    } else {\n                        notification['error']({\n                            message: '通知',\n                            description:\n                                '测试失败，请检查参数',\n                            duration: 1,\n                        });\n                    }\n                });\n            })\n            .catch(errorInfo => {\n\n            });\n\n    }\n\n\n    quit() {\n        this.props.history.goBack();\n\n    }\n\n\n    onFinish = (values) => {\n        axios.post('/dtsource/update', {\n            id: this.props.match.params.id,\n            dataSourceName: values.dtsName,\n            dataSourceType: values.dtsType,\n            secretId: values.accessKey,\n            secretKey: values.accessSecret,\n            region: values.region,\n        }).then((response) => {\n            var result = response.data.message;\n            if (result == 'Success') {\n                notification['success']({\n                    message: '通知',\n                    description:\n                        '修改成功',\n                    duration: 1,\n                });\n                this.props.history.push('/datasource/show');\n            } else {\n                notification['error']({\n                    message: '通知',\n                    description:\n                        '修改失败,请重试',\n                    duration: 1,\n                });\n\n            }\n        });\n    };\n\n\n    render() {\n        return <div style={{padding:'10px'}}>\n            <h2>修改数据源</h2>\n            <Row >\n                <Col span={24}>\n\n                    <Form\n                        {...layout}\n                        ref={this.formRef}\n                        name=\"basic\"\n                        initialValues={{\n                            remember: true,\n                        }}\n                        onFinish={this.onFinish}\n\n                    >\n                        <Form.Item\n                            label=\"数据源名称\"\n                            name=\"dtsName\"\n\n                            rules={[\n                                {\n                                    required: true,\n                                    message: '请输入数据源名称',\n                                },\n                            ]}\n                        >\n                            <Input placeholder=\"请输入数据源名称\" />\n                        </Form.Item>\n                        <Form.Item name=\"dtsType\" label=\"数据源类型\" rules={[{ required: true, message: '请选择数据源类型' }]}>\n                            <Select\n                                placeholder=\"请选择数据源类型\"\n                                onChange={this.onGenderChange}\n                                allowClear\n                            >\n                                <Option value=\"cos\">COS</Option>\n                                <Option value=\"oss\">OSS</Option>\n                                <Option value=\"obs\">OBS</Option>\n                                <Option value=\"bos\">BOS</Option>\n                            </Select>\n                        </Form.Item>\n                        <Form.Item\n                            label=\"AccessKey\"\n                            name=\"accessKey\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: '请输入AccessKey',\n                                },\n                            ]}\n                        >\n                            <Input placeholder=\"请输入AccessKey\" />\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"AccessSecret\"\n                            name=\"accessSecret\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: '请输入AccessSecret',\n                                },\n                            ]}\n                        >\n                            <Input placeholder=\"请输入AccessSecret\" />\n                        </Form.Item>\n\n\n                        <Form.Item\n                            label=\"地域\"\n                            name=\"region\"\n                            rules={[\n                                {\n\n                                    message: '请输入地域',\n                                },\n                            ]}\n                        >\n                            <Input placeholder=\"请输入地域\" />\n                        </Form.Item>\n\n                        <Form.Item {...tailLayout}>\n                            <Button type=\"primary\" htmlType=\"submit\" style={{ marginRight: '10px' }}>\n                                确定\n                                    </Button>\n                            <Button htmlType=\"button\" onClick={() => this.test()} style={{ marginRight: '10px' }}>\n                                测试\n                                    </Button>\n                            <Button htmlType=\"button\" onClick={() => this.quit()}>\n                                取消\n                                    </Button>\n                        </Form.Item>\n                    </Form>\n                </Col>\n\n            </Row>\n        </div>\n\n\n\n    }\n}","C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\dashboard\\Dashboard.jsx",[],"C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\common\\Nav.jsx",["97"],"import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport logo from '../../images/logo.png';\n\nexport default class Nav extends React.Component {\n\n    render() {\n        return <div className=\"navigation\">\n            <div className=\"logo\">\n                <NavLink to=\"/dashboard\">\n                    <img src={logo} />\n                </NavLink>\n            </div>\n            <ul>\n                <li>\n                    <NavLink to=\"/dashboard\">\n                        <i className=\"nav-link-icon ti-pie-chart\"></i>\n                        <span className=\"nav-link-label\">运维大盘</span>\n                        <span className=\"badge badge-danger badge-small\">2</span>\n                    </NavLink>\n\n                </li>\n                <li>\n                    <NavLink to=\"/datasource/show\">\n                        <i className=\"nav-link-icon ti-layers\"></i>\n                        <span className=\"nav-link-label\">数据源管理</span>\n                    </NavLink>\n\n                </li>\n                <li>\n                    <NavLink to=\"/movetask/create\">\n                        <i className=\"nav-link-icon ti-file\"></i>\n                        <span className=\"nav-link-label\">迁移任务管理</span>\n                    </NavLink>\n\n                </li>\n                <li>\n                    <NavLink to=\"/syswarning\">\n                        <i className=\"nav-link-icon ti-pulse\"></i>\n                        <span className=\"nav-link-label\">系统预警</span>\n                        <span className=\"badge badge-warning\">New</span>\n                    </NavLink>\n\n                </li>\n                <li className=\"flex-grow-1\">\n                    <NavLink to=\"/users\">\n                        <i className=\"nav-link-icon ti-user\"></i>\n                        <span className=\"nav-link-label\">用户管理</span>\n                    </NavLink>\n\n                </li>\n                <li>\n                    <NavLink to=\"/settings\">\n                        <i className=\"nav-link-icon ti-settings\"></i>\n                        <span className=\"nav-link-label\">系统设置</span>\n                    </NavLink>\n\n                </li>\n            </ul>\n        </div>\n\n\n    }\n}","C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\common\\Right.jsx",["98","99","100","101"],"C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\common\\Header.jsx",["102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120"],"C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\movetask\\MoveTask.jsx",[],"C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\movetask\\Create.jsx",[],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":8,"column":48,"nodeType":"127","messageId":"128","endLine":8,"endColumn":53},{"ruleId":"125","severity":1,"message":"129","line":8,"column":55,"nodeType":"127","messageId":"128","endLine":8,"endColumn":60},{"ruleId":"125","severity":1,"message":"130","line":8,"column":74,"nodeType":"127","messageId":"128","endLine":8,"endColumn":77},{"ruleId":"131","severity":1,"message":"132","line":47,"column":24,"nodeType":"133","messageId":"134","endLine":47,"endColumn":26},{"ruleId":"131","severity":1,"message":"132","line":74,"column":24,"nodeType":"133","messageId":"134","endLine":74,"endColumn":26},{"ruleId":"131","severity":1,"message":"132","line":26,"column":24,"nodeType":"133","messageId":"134","endLine":26,"endColumn":26},{"ruleId":"131","severity":1,"message":"132","line":29,"column":33,"nodeType":"133","messageId":"134","endLine":29,"endColumn":35},{"ruleId":"131","severity":1,"message":"132","line":25,"column":24,"nodeType":"133","messageId":"134","endLine":25,"endColumn":26},{"ruleId":"131","severity":1,"message":"132","line":29,"column":31,"nodeType":"133","messageId":"134","endLine":29,"endColumn":33},{"ruleId":"135","severity":1,"message":"136","line":98,"column":37,"nodeType":"137","endLine":98,"endColumn":78},{"ruleId":"131","severity":1,"message":"132","line":31,"column":24,"nodeType":"133","messageId":"134","endLine":31,"endColumn":26},{"ruleId":"131","severity":1,"message":"132","line":51,"column":24,"nodeType":"133","messageId":"134","endLine":51,"endColumn":26},{"ruleId":"131","severity":1,"message":"132","line":93,"column":24,"nodeType":"133","messageId":"134","endLine":93,"endColumn":26},{"ruleId":"138","severity":1,"message":"139","line":24,"column":5,"nodeType":"140","messageId":"141","endLine":26,"endColumn":6},{"ruleId":"131","severity":1,"message":"132","line":38,"column":32,"nodeType":"133","messageId":"134","endLine":38,"endColumn":34},{"ruleId":"131","severity":1,"message":"132","line":79,"column":24,"nodeType":"133","messageId":"134","endLine":79,"endColumn":26},{"ruleId":"131","severity":1,"message":"132","line":33,"column":24,"nodeType":"133","messageId":"134","endLine":33,"endColumn":26},{"ruleId":"131","severity":1,"message":"132","line":43,"column":24,"nodeType":"133","messageId":"134","endLine":43,"endColumn":26},{"ruleId":"131","severity":1,"message":"132","line":76,"column":32,"nodeType":"133","messageId":"134","endLine":76,"endColumn":34},{"ruleId":"131","severity":1,"message":"132","line":116,"column":24,"nodeType":"133","messageId":"134","endLine":116,"endColumn":26},{"ruleId":"142","severity":1,"message":"143","line":11,"column":21,"nodeType":"137","endLine":11,"endColumn":39},{"ruleId":"135","severity":1,"message":"136","line":15,"column":29,"nodeType":"137","endLine":15,"endColumn":100},{"ruleId":"135","severity":1,"message":"136","line":31,"column":29,"nodeType":"137","endLine":31,"endColumn":100},{"ruleId":"135","severity":1,"message":"136","line":47,"column":29,"nodeType":"137","endLine":47,"endColumn":100},{"ruleId":"135","severity":1,"message":"136","line":63,"column":29,"nodeType":"137","endLine":63,"endColumn":100},{"ruleId":"125","severity":1,"message":"144","line":3,"column":25,"nodeType":"127","messageId":"128","endLine":3,"endColumn":31},{"ruleId":"125","severity":1,"message":"129","line":3,"column":33,"nodeType":"127","messageId":"128","endLine":3,"endColumn":38},{"ruleId":"131","severity":1,"message":"132","line":18,"column":24,"nodeType":"133","messageId":"134","endLine":18,"endColumn":26},{"ruleId":"135","severity":1,"message":"136","line":45,"column":17,"nodeType":"137","endLine":45,"endColumn":70},{"ruleId":"135","severity":1,"message":"145","line":50,"column":17,"nodeType":"137","endLine":50,"endColumn":93},{"ruleId":"135","severity":1,"message":"145","line":55,"column":17,"nodeType":"137","endLine":55,"endColumn":92},{"ruleId":"135","severity":1,"message":"136","line":70,"column":33,"nodeType":"137","endLine":70,"endColumn":66},{"ruleId":"135","severity":1,"message":"136","line":100,"column":33,"nodeType":"137","endLine":100,"endColumn":106},{"ruleId":"135","severity":1,"message":"136","line":105,"column":33,"nodeType":"137","endLine":105,"endColumn":79},{"ruleId":"135","severity":1,"message":"136","line":111,"column":33,"nodeType":"137","endLine":112,"endColumn":59},{"ruleId":"135","severity":1,"message":"136","line":122,"column":49,"nodeType":"137","endLine":122,"endColumn":114},{"ruleId":"135","severity":1,"message":"136","line":142,"column":49,"nodeType":"137","endLine":142,"endColumn":114},{"ruleId":"135","severity":1,"message":"136","line":166,"column":49,"nodeType":"137","endLine":166,"endColumn":114},{"ruleId":"135","severity":1,"message":"136","line":186,"column":49,"nodeType":"137","endLine":186,"endColumn":114},{"ruleId":"135","severity":1,"message":"136","line":210,"column":49,"nodeType":"137","endLine":210,"endColumn":61},{"ruleId":"135","severity":1,"message":"136","line":218,"column":33,"nodeType":"137","endLine":218,"endColumn":115},{"ruleId":"135","severity":1,"message":"136","line":225,"column":37,"nodeType":"137","endLine":225,"endColumn":121},{"ruleId":"135","severity":1,"message":"136","line":240,"column":25,"nodeType":"137","endLine":240,"endColumn":58},{"ruleId":"135","severity":1,"message":"136","line":245,"column":25,"nodeType":"137","endLine":245,"endColumn":58},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"no-unused-vars","'Radio' is defined but never used.","Identifier","unusedVar","'Space' is defined but never used.","'Col' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Button' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]