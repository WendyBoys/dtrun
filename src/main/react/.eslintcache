[{"C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\index.js":"1","C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\App.jsx":"2","C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\user\\Register.jsx":"3","C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\datasource\\Datasource.jsx":"4","C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\user\\Login.jsx":"5","C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\datasource\\Show.jsx":"6","C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\datasource\\Create.jsx":"7","C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\datasource\\Update.jsx":"8","C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\Index.jsx":"9","C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\Header.jsx":"10","C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\Right.jsx":"11","C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\user\\Modify.jsx":"12","C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\Nav.jsx":"13","C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\Dashboard.jsx":"14"},{"size":267,"mtime":1607498065438,"results":"15","hashOfConfig":"16"},{"size":2155,"mtime":1607591769310,"results":"17","hashOfConfig":"16"},{"size":4267,"mtime":1607591769321,"results":"18","hashOfConfig":"16"},{"size":782,"mtime":1607591769315,"results":"19","hashOfConfig":"16"},{"size":5088,"mtime":1607591769319,"results":"20","hashOfConfig":"16"},{"size":6473,"mtime":1607591769317,"results":"21","hashOfConfig":"16"},{"size":7919,"mtime":1607591769314,"results":"22","hashOfConfig":"16"},{"size":9123,"mtime":1607591769318,"results":"23","hashOfConfig":"16"},{"size":825,"mtime":1607591769312,"results":"24","hashOfConfig":"16"},{"size":14603,"mtime":1607591769311,"results":"25","hashOfConfig":"16"},{"size":5629,"mtime":1607591769313,"results":"26","hashOfConfig":"16"},{"size":4133,"mtime":1607591769319,"results":"27","hashOfConfig":"16"},{"size":2296,"mtime":1607591769313,"results":"28","hashOfConfig":"16"},{"size":2103,"mtime":1607591769311,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1t2n1w",{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"37"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"37"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"37"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"37"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\index.js",[],"C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\App.jsx",["65","66"],"C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\user\\Register.jsx",["67","68"],"import React from 'react';\r\nimport '../../css/css2.css';\r\nimport socket from '../../images/socket.svg';\r\nimport axios from 'axios';\r\nimport {Form, Input, Button, Checkbox, notification} from 'antd';\r\nimport {UserOutlined, LockOutlined} from '@ant-design/icons';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nexport default class Register extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: '注册',\r\n        }\r\n    }\r\n\r\n\r\n    onFinish = (values) => {\r\n        axios.post('http://localhost/user/register', {\r\n            account: values.account,\r\n            password: values.password,\r\n        }).then((response) => {\r\n            const result = response.data.message;\r\n            if (result == 'Success') {\r\n                this.props.history.push('/login')\r\n                notification['success']({\r\n                    message: '通知',\r\n                    description:\r\n                        '注册成功',\r\n                    duration: 2,\r\n                });\r\n            } else {\r\n                notification['error']({\r\n                    message: '通知',\r\n                    description:\r\n                        '注册失败，请稍后重试',\r\n                    duration: 2,\r\n                });\r\n            }\r\n        });\r\n\r\n    };\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\" style={{marginBottom: '5%', paddingTop: '20px', minHeight: '200px'}}>\r\n                    <div className=\"col-xl-3\"></div>\r\n                    <div className=\"col-xl-6\"><img src={socket} alt=\"\" width=\"100%\" height=\"200px\"/></div>\r\n                    <div className=\"col-xl-3\">\r\n                        <div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-3\"></div>\r\n                    <div className=\"col-xl-6\">\r\n                        <div>\r\n                            <Form\r\n                                name=\"normal_login\"\r\n                                className=\"login-form\"\r\n                                initialValues={{remember: true}}\r\n                                onFinish={this.onFinish}\r\n                            >\r\n                                <Form.Item\r\n                                    name=\"account\"\r\n                                    rules={[{required: true, message: 'Please input your Username!'}]}\r\n                                >\r\n                                    <Input prefix={<UserOutlined className=\"site-form-item-icon\"/>}\r\n                                           placeholder=\"Username\"/>\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name=\"password\"\r\n                                    rules={[{required: true, message: 'Please input your Password!'}]}\r\n                                >\r\n                                    <Input.Password\r\n                                        prefix={<LockOutlined className=\"site-form-item-icon\"/>}\r\n                                        type=\"password\"\r\n                                        placeholder=\"Password\"\r\n                                    />\r\n                                </Form.Item>\r\n                                <Form.Item>\r\n\r\n\r\n                                    <NavLink className=\"login-form-forgot\" to=\"/login\">\r\n                                        已有账号？去登录\r\n                                    </NavLink>\r\n                                </Form.Item>\r\n\r\n                                <Form.Item>\r\n                                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\"\r\n                                            style={{marginBottom: '20px'}}>\r\n                                        立即注册\r\n                                    </Button>\r\n                                </Form.Item>\r\n                            </Form>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-xl-3\"></div>\r\n                </div>\r\n\r\n\r\n            </div>);\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\n",["69","70"],"C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\datasource\\Datasource.jsx",["71"],"import React from 'react';\r\nimport Show from './Show';\r\nimport Create from './Create';\r\nimport Update from './Update';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport Header from \"../Header\";\r\nimport Right from \"../Right\";\r\nimport  Modify from \"../user/Modify\"\r\nexport default class Index extends React.Component {\r\n\r\n    render() {\r\n        return <div>           \r\n                <Switch>\r\n                    <Route path={\"/datasource/modify\"} component={Modify}/>\r\n                    <Route path=\"/datasource/create\" component={Create} />\r\n                    <Route path=\"/datasource/show\" component={Show} />\r\n                    <Route path=\"/datasource/update/:id\" component={Update} />\r\n                </Switch>      \r\n        </div>\r\n    }\r\n}\r\n\r\n\r\n","C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\user\\Login.jsx",["72","73","74"],"import React from 'react';\r\nimport '../../css/css2.css';\r\nimport socket from '../../images/socket.svg';\r\nimport axios from 'axios';\r\nimport cookie from 'react-cookies'\r\nimport {Form, Input, Button, Checkbox} from 'antd';\r\nimport {UserOutlined, LockOutlined} from '@ant-design/icons';\r\nimport {notification} from \"antd\";\r\n\r\nexport default class Login extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: '登录',\r\n        }\r\n    }\r\n\r\n\r\n    onFinish = (values) => {\r\n        axios.post('http://localhost/user/login', {\r\n            account: values.account,\r\n            password: values.password,\r\n        }).then((response) => {\r\n            var result = response.data.message;\r\n            var token = response.data.data;\r\n            if (result == 'Success') {\r\n                let inFifteenMinutes = new Date(new Date().getTime() + 7 * 24 * 3600 * 1000);\r\n                cookie.save('token', token, {expires: inFifteenMinutes})\r\n                this.props.history.push({pathname:'/index'})\r\n            } else if (result == 'LoginRefuse') {\r\n                notification['error']({\r\n                    message: '通知',\r\n                    description:\r\n                        '账号已被封禁',\r\n                    duration: 2,\r\n                });\r\n            } else {\r\n                notification['error']({\r\n                    message: '通知',\r\n                    description:\r\n                        '账号或密码错误',\r\n                    duration: 2,\r\n                });\r\n            }\r\n\r\n        });\r\n\r\n    };\r\n\r\n    register() {\r\n        this.props.history.push('/register')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\" style={{marginBottom: '5%', paddingTop: '20px', minHeight: '200px'}}>\r\n                    <div className=\"col-xl-3\"></div>\r\n                    <div className=\"col-xl-6\"><img src={socket} alt=\"\" width=\"100%\" height=\"200px\"/></div>\r\n                    <div className=\"col-xl-3\">\r\n                        <div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-3\"></div>\r\n                    <div className=\"col-xl-6\">\r\n                        <div>\r\n                            <Form\r\n                                name=\"normal_login\"\r\n                                className=\"login-form\"\r\n                                initialValues={{remember: true}}\r\n                                onFinish={this.onFinish}\r\n                            >\r\n                                <Form.Item\r\n                                    name=\"account\"\r\n                                    rules={[{required: true, message: 'Please input your Username!'}]}\r\n                                >\r\n                                    <Input prefix={<UserOutlined className=\"site-form-item-icon\"/>}\r\n                                           placeholder=\"Username\"/>\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name=\"password\"\r\n                                    rules={[{required: true, message: 'Please input your Password!'}]}\r\n                                >\r\n                                    <Input.Password\r\n                                        prefix={<LockOutlined className=\"site-form-item-icon\"/>}\r\n                                        type=\"password\"\r\n                                        placeholder=\"Password\"\r\n                                    />\r\n                                </Form.Item>\r\n                                <Form.Item>\r\n                                    <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n                                        <Checkbox>记住我</Checkbox>\r\n                                    </Form.Item>\r\n\r\n                                    <a className=\"login-form-forgot\" href=\"\">\r\n                                        忘记密码\r\n                                    </a>\r\n                                </Form.Item>\r\n\r\n                                <Form.Item>\r\n                                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\"\r\n                                            style={{marginBottom: '20px'}}>\r\n                                        登录\r\n                                    </Button>\r\n                                    <Button type=\"primary\" htmlType=\"button\" className=\"login-form-button\"\r\n                                            onClick={() => this.register()}>\r\n                                        立即注册\r\n                                    </Button>\r\n                                </Form.Item>\r\n                            </Form>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-xl-3\"></div>\r\n                </div>\r\n\r\n\r\n            </div>);\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\n","C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\datasource\\Show.jsx",["75","76","77"],"import React, { useState, useEffect } from 'react';\r\nimport Nav from '../common/Nav'\r\nimport axios from 'axios';\r\nimport { notification, Modal, Spin } from 'antd';\r\n\r\n\r\nconst Show = (props) => {\r\n    const [list, setList] = useState([]);\r\n    const [dtsId, setDtsId] = useState(-1);\r\n    const [visible, setVisible] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [confirmLoading, setConfirmLoading] = useState(false);\r\n    const [modalText, setModalText] = useState('');\r\n\r\n\r\n    const handleOk = () => {\r\n        setConfirmLoading(true);\r\n        axios.delete('/dtsource/delete', {\r\n            data: {\r\n                id: dtsId,\r\n            }\r\n        }).then((response) => {\r\n            var result = response.data.message;\r\n            if (result == 'Success') {\r\n                setVisible(false);\r\n                setConfirmLoading(false);\r\n                fentch();\r\n            } else {\r\n                notification['error']({\r\n                    message: '通知',\r\n                    description:\r\n                        '删除失败！',\r\n                    duration: 1,\r\n                });\r\n\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setVisible(false);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        fentch();\r\n\r\n    }, []);\r\n\r\n\r\n    const fentch = () => {\r\n        setLoading(true)\r\n        axios.get('/dtsource/findAll').then((response) => {\r\n            var result = response.data.message;\r\n            var data = response.data.data;\r\n            if (result == 'Success') {\r\n                setList(data);\r\n                setLoading(false)\r\n            } else {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    const toCreate = () => {\r\n        props.history.push('/datasource/create')\r\n    }\r\n\r\n    const testDts = (id) => {\r\n        setLoading(true)\r\n        axios.post('/dtsource/connection', {\r\n            id: id,\r\n        }).then((response) => {\r\n            var result = response.data.message;\r\n            if (result == 'Success') {\r\n                setLoading(false)\r\n                notification['success']({\r\n                    message: '通知',\r\n                    description:\r\n                        '测试成功',\r\n                    duration: 1,\r\n                });\r\n            } else {\r\n                notification['error']({\r\n                    message: '通知',\r\n                    description:\r\n                        '测试失败，请检查您的参数设置',\r\n                    duration: 1,\r\n                });\r\n            }\r\n            setLoading(false)\r\n        });\r\n    }\r\n\r\n\r\n    const deleteDts = (id, dtSourceName) => {\r\n        setDtsId(id);\r\n        setModalText('您确定要删除数据源 ' + dtSourceName + ' 吗?');\r\n        setVisible(true);\r\n    }\r\n\r\n\r\n    const updateDts = (id) => {\r\n        props.history.push('/datasource/update/' + id)\r\n    }\r\n\r\n\r\n    const container = ((\r\n\r\n        <div className=\"content-wrapper\">\r\n            <Nav />\r\n\r\n            <div className=\"content-body\">\r\n\r\n                <Spin size=\"large\" spinning={loading}>\r\n\r\n                    <div id=\"listdts\" className=\"content\">\r\n                        <div className=\"row\" style={{ marginBottom: '10px' }}>\r\n                            <div className=\"col-xl-12 \">\r\n                                <button className=\"btn btn-primary pull-right\" onClick={() => toCreate()}>创建</button>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"row\">\r\n\r\n                            <div className=\"col-xl-12 components-sidebar\">\r\n                                <table id=\"table\" className=\"table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\">序号</th>\r\n                                            <th scope=\"col\">数据源名称</th>\r\n                                            <th scope=\"col\">数据源类型</th>\r\n                                            <th scope=\"col\">创建时间</th>\r\n                                            <th scope=\"col\">操作</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody id=\"dtsource\">\r\n                                        {\r\n                                            list.map((item, index) =>\r\n                                                <tr key={index}>\r\n                                                    <td>{index + 1}</td>\r\n                                                    <td><span\r\n                                                        style={{ color: '#0062FF', cursor: 'pointer', marginRight: '10px' }}\r\n                                                        onClick={() => updateDts(item.id)}>{item.dtSourceName}</span></td>\r\n                                                    <td>{item.dtSourceType}</td>\r\n                                                    <td>{item.createTime}</td>\r\n                                                    <td><span\r\n                                                        style={{ color: '#0062FF', cursor: 'pointer', marginRight: '10px' }}\r\n                                                        onClick={() => testDts(item.id)}>测试</span> <span\r\n                                                            style={{ color: '#0062FF', cursor: 'pointer' }}\r\n                                                            onClick={() => deleteDts(item.id, item.dtSourceName)}>删除</span></td>\r\n                                                </tr>\r\n                                            )\r\n                                        }\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                        <Modal\r\n                            title=\"删除数据源\"\r\n                            okText=\"确定\"\r\n                            cancelText=\"取消\"\r\n                            visible={visible}\r\n                            onOk={handleOk}\r\n                            confirmLoading={confirmLoading}\r\n                            onCancel={handleCancel}\r\n                        >\r\n                            <p>{modalText}</p>\r\n                        </Modal>\r\n                    </div>\r\n                </Spin>\r\n            </div>\r\n        </div>\r\n\r\n    ));\r\n\r\n    return container\r\n}\r\n\r\n\r\nexport default Show;\r\n","C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\datasource\\Create.jsx",["78","79"],"import React from 'react';\r\nimport Nav from '../common/Nav';\r\nimport axios from 'axios';\r\nimport { Form, Input, Button, Select } from 'antd';\r\nimport { notification } from 'antd';\r\nconst { Option } = Select;\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 3,\r\n    },\r\n    wrapperCol: {\r\n        span: 16,\r\n    },\r\n};\r\n\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 3,\r\n        span: 16,\r\n    },\r\n};\r\nexport default class Create extends React.Component {\r\n    formRef = React.createRef();\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    test() {\r\n\r\n        this.formRef.current.validateFields()\r\n            .then(values => {\r\n                axios.post('/dtsource/testconnection', {\r\n                    dataSourceType: values.dtsType,\r\n                    accessKey: values.accessKey,\r\n                    accessSecret: values.accessSecret,\r\n                    region: values.region,\r\n                }).then((response) => {\r\n                    var result = response.data.message;\r\n                    if (result == 'Success') {\r\n                        notification['success']({\r\n                            message: '通知',\r\n                            description:\r\n                                '测试成功',\r\n                            duration: 1,\r\n                        });\r\n                    } else {\r\n                        notification['error']({\r\n                            message: '通知',\r\n                            description:\r\n                                '测试失败,请检查参数',\r\n                            duration: 1,\r\n                        });\r\n                    }\r\n                });\r\n            })\r\n            .catch(errorInfo => {\r\n\r\n            });\r\n\r\n    }\r\n\r\n\r\n    quit() {\r\n        this.props.history.goBack();\r\n\r\n    }\r\n\r\n\r\n\r\n    onFinish = (values) => {\r\n\r\n        axios.post('/dtsource/create', {\r\n            dataSourceName: values.dtsName,\r\n            dataSourceType: values.dtsType,\r\n            secretId: values.accessKey,\r\n            secretKey: values.accessSecret,\r\n            region: values.region,\r\n        }).then((response) => {\r\n            var result = response.data.message;\r\n            if (result == 'Success') {\r\n                this.props.history.push('/datasource/show');\r\n            } else {\r\n\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return <div className=\"content-wrapper\">\r\n\r\n                <Nav />\r\n                <div className=\"content-body\">\r\n\r\n                    <div id=\"createdts\" className=\"content\" >\r\n                        <div className=\"page-header d-flex justify-content-between\">\r\n                            <h2>创建数据源</h2>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n\r\n                            <div className=\"col-xl-12 components-sidebar\">\r\n\r\n                                <Form\r\n                                    {...layout}\r\n                                    ref={this.formRef}\r\n                                    name=\"basic\"\r\n                                    initialValues={{\r\n                                        remember: true,\r\n                                    }}\r\n                                    onFinish={this.onFinish}\r\n\r\n                                >\r\n                                    <Form.Item\r\n                                        label=\"数据源名称\"\r\n                                        name=\"dtsName\"\r\n\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: '请输入数据源名称',\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input placeholder=\"请输入数据源名称\" />\r\n                                    </Form.Item>\r\n                                    <Form.Item name=\"dtsType\" label=\"数据源类型\" rules={[{ required: true, message: '请选择数据源类型' }]}>\r\n                                        <Select\r\n                                            placeholder=\"请选择数据源类型\"\r\n                                            onChange={this.onGenderChange}\r\n                                            allowClear\r\n                                        >\r\n                                            <Option value=\"cos\">COS</Option>\r\n                                            <Option value=\"oss\">OSS</Option>\r\n                                            <Option value=\"obs\">OBS</Option>\r\n                                            <Option value=\"bos\">BOS</Option>\r\n                                        </Select>\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        label=\"AccessKey\"\r\n                                        name=\"accessKey\"\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: '请输入AccessKey',\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input placeholder=\"请输入AccessKey\" />\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item\r\n                                        label=\"AccessSecret\"\r\n                                        name=\"accessSecret\"\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: '请输入AccessSecret',\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input placeholder=\"请输入AccessSecret\" />\r\n                                    </Form.Item>\r\n\r\n\r\n                                    <Form.Item\r\n                                        label=\"地域\"\r\n                                        name=\"region\"\r\n                                        rules={[\r\n                                            {\r\n\r\n                                                message: '请输入地域',\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input placeholder=\"请输入地域\" />\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item {...tailLayout}>\r\n                                        <Button type=\"primary\" htmlType=\"submit\" style={{ marginRight: '10px' }}>\r\n                                            确定\r\n                                    </Button>\r\n                                        <Button htmlType=\"button\" onClick={() => this.test()} style={{ marginRight: '10px' }}>\r\n                                            测试\r\n                                    </Button>\r\n                                        <Button htmlType=\"button\" onClick={() => this.quit()}>\r\n                                            取消\r\n                                    </Button>\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n    }\r\n}","C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\datasource\\Update.jsx",["80","81","82"],"import React from 'react';\r\nimport Nav from '../Nav';\r\nimport axios from 'axios';\r\nimport Header from '../Header'\r\nimport Right from '../Right'\r\nimport {Form, Input, Button, Select} from 'antd';\r\nimport {notification} from 'antd';\r\n\r\nconst {Option} = Select;\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 3,\r\n    },\r\n    wrapperCol: {\r\n        span: 16,\r\n    },\r\n};\r\n\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 3,\r\n        span: 16,\r\n    },\r\n};\r\nexport default class Update extends React.Component {\r\n    formRef = React.createRef();\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n\r\n\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n\r\n        this.getDts()\r\n\r\n    }\r\n\r\n\r\n    getDts() {\r\n        axios.get('http://localhost/dtsource/getDtSourceById?id=' + this.props.match.params.id).then((response) => {\r\n            const result = response.data.message;\r\n            if (result == 'Success') {\r\n                const data = response.data.data;\r\n                const dtSourceJson = JSON.parse(data.dtSourceJson);\r\n                this.formRef.current.setFieldsValue(\r\n                    {\r\n                        dtsName: data.dtSourceName,\r\n                        dtsType: data.dtSourceType,\r\n                        accessKey: dtSourceJson.accessKey,\r\n                        accessSecret: dtSourceJson.accessSecret,\r\n                        region: dtSourceJson.region\r\n                    },\r\n                );\r\n            } else {\r\n                notification['error']({\r\n                    message: '通知',\r\n                    description:\r\n                        '获取数据源信息失败，请稍后重试',\r\n                    duration: 1,\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    test() {\r\n        this.formRef.current.validateFields()\r\n            .then(values => {\r\n                axios.post('http://localhost/dtsource/testconnection', {\r\n                    dataSourceType: values.dtsType,\r\n                    accessKey: values.accessKey,\r\n                    accessSecret: values.accessSecret,\r\n                    region: values.region,\r\n                }).then((response) => {\r\n                    var result = response.data.message;\r\n                    if (result == 'Success') {\r\n                        notification['success']({\r\n                            message: '通知',\r\n                            description:\r\n                                '测试成功',\r\n                            duration: 1,\r\n                        });\r\n                    } else {\r\n                        notification['error']({\r\n                            message: '通知',\r\n                            description:\r\n                                '测试失败，请检查参数',\r\n                            duration: 1,\r\n                        });\r\n                    }\r\n                });\r\n            })\r\n            .catch(errorInfo => {\r\n\r\n            });\r\n\r\n    }\r\n\r\n\r\n    quit() {\r\n        this.props.history.goBack();\r\n\r\n    }\r\n\r\n\r\n    onFinish = (values) => {\r\n        axios.post('http://localhost/dtsource/update', {\r\n            id: this.props.match.params.id,\r\n            dataSourceName: values.dtsName,\r\n            dataSourceType: values.dtsType,\r\n            secretId: values.accessKey,\r\n            secretKey: values.accessSecret,\r\n            region: values.region,\r\n        }).then((response) => {\r\n            var result = response.data.message;\r\n            if (result == 'Success') {\r\n                notification['success']({\r\n                    message: '通知',\r\n                    description:\r\n                        '修改成功',\r\n                    duration: 1,\r\n                });\r\n                this.props.history.push('/datasource/show');\r\n            } else {\r\n                notification['error']({\r\n                    message: '通知',\r\n                    description:\r\n                        '修改失败,请重试',\r\n                    duration: 1,\r\n                });\r\n\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n    render() {\r\n        return <div className=\"content-wrapper\">\r\n            <Nav/>\r\n            <div className=\"content-body\">\r\n\r\n                <div id=\"createdts\" className=\"content\">\r\n                    <div className=\"page-header d-flex justify-content-between\">\r\n                        <h2>修改数据源</h2>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-xl-12 components-sidebar\">\r\n\r\n                            <Form\r\n                                {...layout}\r\n                                ref={this.formRef}\r\n                                name=\"basic\"\r\n                                initialValues={{\r\n                                    remember: true,\r\n                                }}\r\n                                onFinish={this.onFinish}\r\n\r\n                            >\r\n                                <Form.Item\r\n                                    label=\"数据源名称\"\r\n                                    name=\"dtsName\"\r\n\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                            message: '请输入数据源名称',\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input placeholder=\"请输入数据源名称\"/>\r\n                                </Form.Item>\r\n                                <Form.Item name=\"dtsType\" label=\"数据源类型\" rules={[{required: true, message: '请选择数据源类型'}]}>\r\n                                    <Select\r\n                                        placeholder=\"请选择数据源类型\"\r\n                                        onChange={this.onGenderChange}\r\n                                        allowClear\r\n                                    >\r\n                                        <Option value=\"cos\">COS</Option>\r\n                                        <Option value=\"oss\">OSS</Option>\r\n                                        <Option value=\"obs\">OBS</Option>\r\n                                        <Option value=\"bos\">BOS</Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    label=\"AccessKey\"\r\n                                    name=\"accessKey\"\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                            message: '请输入AccessKey',\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input placeholder=\"请输入AccessKey\"/>\r\n                                </Form.Item>\r\n\r\n                                <Form.Item\r\n                                    label=\"AccessSecret\"\r\n                                    name=\"accessSecret\"\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                            message: '请输入AccessSecret',\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input placeholder=\"请输入AccessSecret\"/>\r\n                                </Form.Item>\r\n\r\n\r\n                                <Form.Item\r\n                                    label=\"地域\"\r\n                                    name=\"region\"\r\n                                    rules={[\r\n                                        {\r\n\r\n                                            message: '请输入地域',\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input placeholder=\"请输入地域\"/>\r\n                                </Form.Item>\r\n\r\n                                <Form.Item {...tailLayout}>\r\n                                    <Button type=\"primary\" htmlType=\"submit\" style={{marginRight: '10px'}}>\r\n                                        确定\r\n                                    </Button>\r\n                                    <Button htmlType=\"button\" onClick={() => this.test()} style={{marginRight: '10px'}}>\r\n                                        测试\r\n                                    </Button>\r\n                                    <Button htmlType=\"button\" onClick={() => this.quit()}>\r\n                                        取消\r\n                                    </Button>\r\n                                </Form.Item>\r\n                            </Form>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n\r\n\r\n    }\r\n}","C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\Index.jsx",[],"C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\Header.jsx",["83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101"],"C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\Right.jsx",["102","103","104","105"],"C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\user\\Modify.jsx",["106","107"],"C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\Nav.jsx",["108"],"C:\\Users\\Xiaoxiaoxuan\\ideaProject\\dtrun\\src\\main\\react\\src\\components\\Dashboard.jsx",["109","110","111"],{"ruleId":"112","severity":1,"message":"113","line":2,"column":24,"nodeType":"114","messageId":"115","endLine":2,"endColumn":32},{"ruleId":"112","severity":1,"message":"116","line":8,"column":8,"nodeType":"114","messageId":"115","endLine":8,"endColumn":18},{"ruleId":"112","severity":1,"message":"117","line":5,"column":30,"nodeType":"114","messageId":"115","endLine":5,"endColumn":38},{"ruleId":"118","severity":1,"message":"119","line":26,"column":24,"nodeType":"120","messageId":"121","endLine":26,"endColumn":26},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"112","severity":1,"message":"113","line":5,"column":25,"nodeType":"114","messageId":"115","endLine":5,"endColumn":33},{"ruleId":"118","severity":1,"message":"119","line":27,"column":24,"nodeType":"120","messageId":"121","endLine":27,"endColumn":26},{"ruleId":"118","severity":1,"message":"119","line":31,"column":31,"nodeType":"120","messageId":"121","endLine":31,"endColumn":33},{"ruleId":"126","severity":1,"message":"127","line":100,"column":37,"nodeType":"128","endLine":100,"endColumn":78},{"ruleId":"118","severity":1,"message":"119","line":24,"column":24,"nodeType":"120","messageId":"121","endLine":24,"endColumn":26},{"ruleId":"118","severity":1,"message":"119","line":62,"column":24,"nodeType":"120","messageId":"121","endLine":62,"endColumn":26},{"ruleId":"118","severity":1,"message":"119","line":82,"column":24,"nodeType":"120","messageId":"121","endLine":82,"endColumn":26},{"ruleId":"118","severity":1,"message":"119","line":45,"column":32,"nodeType":"120","messageId":"121","endLine":45,"endColumn":34},{"ruleId":"118","severity":1,"message":"119","line":86,"column":24,"nodeType":"120","messageId":"121","endLine":86,"endColumn":26},{"ruleId":"118","severity":1,"message":"119","line":45,"column":24,"nodeType":"120","messageId":"121","endLine":45,"endColumn":26},{"ruleId":"118","severity":1,"message":"119","line":78,"column":32,"nodeType":"120","messageId":"121","endLine":78,"endColumn":34},{"ruleId":"118","severity":1,"message":"119","line":118,"column":24,"nodeType":"120","messageId":"121","endLine":118,"endColumn":26},{"ruleId":"112","severity":1,"message":"129","line":3,"column":25,"nodeType":"114","messageId":"115","endLine":3,"endColumn":31},{"ruleId":"112","severity":1,"message":"130","line":3,"column":33,"nodeType":"114","messageId":"115","endLine":3,"endColumn":38},{"ruleId":"118","severity":1,"message":"119","line":18,"column":24,"nodeType":"120","messageId":"121","endLine":18,"endColumn":26},{"ruleId":"126","severity":1,"message":"127","line":45,"column":17,"nodeType":"128","endLine":45,"endColumn":70},{"ruleId":"126","severity":1,"message":"131","line":50,"column":17,"nodeType":"128","endLine":50,"endColumn":93},{"ruleId":"126","severity":1,"message":"131","line":55,"column":17,"nodeType":"128","endLine":55,"endColumn":92},{"ruleId":"126","severity":1,"message":"127","line":70,"column":33,"nodeType":"128","endLine":70,"endColumn":66},{"ruleId":"126","severity":1,"message":"127","line":100,"column":33,"nodeType":"128","endLine":100,"endColumn":106},{"ruleId":"126","severity":1,"message":"127","line":105,"column":33,"nodeType":"128","endLine":105,"endColumn":79},{"ruleId":"126","severity":1,"message":"127","line":111,"column":33,"nodeType":"128","endLine":112,"endColumn":59},{"ruleId":"126","severity":1,"message":"127","line":122,"column":49,"nodeType":"128","endLine":122,"endColumn":114},{"ruleId":"126","severity":1,"message":"127","line":142,"column":49,"nodeType":"128","endLine":142,"endColumn":114},{"ruleId":"126","severity":1,"message":"127","line":166,"column":49,"nodeType":"128","endLine":166,"endColumn":114},{"ruleId":"126","severity":1,"message":"127","line":186,"column":49,"nodeType":"128","endLine":186,"endColumn":114},{"ruleId":"126","severity":1,"message":"127","line":210,"column":49,"nodeType":"128","endLine":210,"endColumn":61},{"ruleId":"126","severity":1,"message":"127","line":218,"column":33,"nodeType":"128","endLine":218,"endColumn":115},{"ruleId":"126","severity":1,"message":"127","line":225,"column":37,"nodeType":"128","endLine":225,"endColumn":121},{"ruleId":"126","severity":1,"message":"127","line":240,"column":25,"nodeType":"128","endLine":240,"endColumn":58},{"ruleId":"126","severity":1,"message":"127","line":245,"column":25,"nodeType":"128","endLine":245,"endColumn":58},{"ruleId":"126","severity":1,"message":"127","line":15,"column":29,"nodeType":"128","endLine":15,"endColumn":100},{"ruleId":"126","severity":1,"message":"127","line":31,"column":29,"nodeType":"128","endLine":31,"endColumn":100},{"ruleId":"126","severity":1,"message":"127","line":47,"column":29,"nodeType":"128","endLine":47,"endColumn":100},{"ruleId":"126","severity":1,"message":"127","line":63,"column":29,"nodeType":"128","endLine":63,"endColumn":100},{"ruleId":"112","severity":1,"message":"132","line":3,"column":30,"nodeType":"114","messageId":"115","endLine":3,"endColumn":37},{"ruleId":"118","severity":1,"message":"119","line":33,"column":24,"nodeType":"120","messageId":"121","endLine":33,"endColumn":26},{"ruleId":"133","severity":1,"message":"134","line":11,"column":21,"nodeType":"128","endLine":11,"endColumn":39},{"ruleId":"112","severity":1,"message":"135","line":3,"column":8,"nodeType":"114","messageId":"115","endLine":3,"endColumn":13},{"ruleId":"112","severity":1,"message":"136","line":4,"column":8,"nodeType":"114","messageId":"115","endLine":4,"endColumn":14},{"ruleId":"126","severity":1,"message":"127","line":27,"column":45,"nodeType":"128","endLine":27,"endColumn":75},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Datasource' is defined but never used.","'Checkbox' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["137"],"no-negated-in-lhs",["138"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Button' is defined but never used.","'Space' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'message' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'axios' is defined but never used.","'cookie' is defined but never used.","no-global-assign","no-unsafe-negation"]