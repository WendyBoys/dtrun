[{"D:\\trave\\dtrun\\src\\main\\react\\src\\index.js":"1","D:\\trave\\dtrun\\src\\main\\react\\src\\components\\App.jsx":"2","D:\\trave\\dtrun\\src\\main\\react\\src\\components\\user\\Login.jsx":"3","D:\\trave\\dtrun\\src\\main\\react\\src\\components\\user\\Register.jsx":"4","D:\\trave\\dtrun\\src\\main\\react\\src\\components\\dashboard\\Index.jsx":"5","D:\\trave\\dtrun\\src\\main\\react\\src\\components\\datasource\\Datasource.jsx":"6","D:\\trave\\dtrun\\src\\main\\react\\src\\components\\dashboard\\Dashboard.jsx":"7","D:\\trave\\dtrun\\src\\main\\react\\src\\components\\datasource\\Create.jsx":"8","D:\\trave\\dtrun\\src\\main\\react\\src\\components\\datasource\\Update.jsx":"9","D:\\trave\\dtrun\\src\\main\\react\\src\\components\\datasource\\Show.jsx":"10","D:\\trave\\dtrun\\src\\main\\react\\src\\components\\user\\Modify.jsx":"11","D:\\trave\\dtrun\\src\\main\\react\\src\\components\\common\\Header.jsx":"12","D:\\trave\\dtrun\\src\\main\\react\\src\\components\\common\\Right.jsx":"13","D:\\trave\\dtrun\\src\\main\\react\\src\\components\\common\\Nav.jsx":"14"},{"size":280,"mtime":1607427001795,"results":"15","hashOfConfig":"16"},{"size":2389,"mtime":1608557616754,"results":"17","hashOfConfig":"16"},{"size":5074,"mtime":1608562061245,"results":"18","hashOfConfig":"16"},{"size":5201,"mtime":1608619857218,"results":"19","hashOfConfig":"16"},{"size":850,"mtime":1608557616901,"results":"20","hashOfConfig":"16"},{"size":718,"mtime":1608557616788,"results":"21","hashOfConfig":"16"},{"size":2042,"mtime":1608557616902,"results":"22","hashOfConfig":"16"},{"size":7832,"mtime":1608557616787,"results":"23","hashOfConfig":"16"},{"size":9020,"mtime":1608557616795,"results":"24","hashOfConfig":"16"},{"size":6549,"mtime":1608557616794,"results":"25","hashOfConfig":"16"},{"size":4140,"mtime":1608562076109,"results":"26","hashOfConfig":"16"},{"size":14587,"mtime":1608557616906,"results":"27","hashOfConfig":"16"},{"size":5629,"mtime":1608557616903,"results":"28","hashOfConfig":"16"},{"size":2299,"mtime":1608557616905,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"11tmelg",{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"32"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"32"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"32"},"D:\\trave\\dtrun\\src\\main\\react\\src\\index.js",[],["70","71"],"D:\\trave\\dtrun\\src\\main\\react\\src\\components\\App.jsx",["72","73"],"import React from 'react';\r\nimport {Route, Switch, Redirect} from 'react-router-dom';\r\nimport Login from './user/Login';\r\nimport Index from './dashboard/Index';\r\nimport axios from 'axios';\r\nimport cookie from 'react-cookies'\r\nimport Register from './user/Register';\r\nimport Datasource from \"./datasource/Datasource\";\r\n\r\n\r\nimport 'antd/dist/antd.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '../css/css2.css';\r\nimport '../css/bundle.css';\r\nimport '../css/prism.css';\r\nimport '../css/app.css';\r\nimport {notification} from \"antd\";\r\n\r\nexport default class App extends React.Component {\r\n\r\n\r\n    componentWillMount() {\r\n        const url='http://127.0.0.1:8080';\r\n        axios.interceptors.request.use(function (config) {\r\n            const currentUrl = window.location.href;\r\n            const token = cookie.load('token');\r\n            if (currentUrl.endsWith('/') || currentUrl.endsWith('login') || currentUrl.endsWith('register')) {\r\n\r\n            } else {\r\n                if (token === undefined || token.trim() === '') {\r\n                    window.location.href = '/login'\r\n                }\r\n            }\r\n            config.headers.common['token'] = token;\r\n            config.headers.common['Access-Control-Max-Age'] = 86400;\r\n            if (config.url.indexOf(url) === -1) {\r\n                config.url=url+config.url;\r\n            }\r\n            return config;\r\n        });\r\n\r\n        axios.interceptors.response.use(function (response) {\r\n            // Do something with response data\r\n            return response;\r\n        }, error => {\r\n            if (error) {\r\n                notification['error']({\r\n                    message: '通知',\r\n                    description:\r\n                        '操作失败，请稍后重试！',\r\n                    duration: 2,\r\n                });\r\n            }\r\n            return Promise.reject(error);\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        return <div>\r\n            <Switch>\r\n                <Route path=\"/register\" component={Register}/>\r\n                <Route path=\"/login\" component={Login}/>\r\n                <Route exact={true} path=\"/\" component={Login}/>\r\n                <Route path=\"/index\" component={Index}/>\r\n                <Route path=\"/dashboard\" component={Index}/>\r\n                <Route path=\"/datasource\" component={Index}/>\r\n            </Switch>\r\n        </div>\r\n\r\n    }\r\n}\r\n\r\n","D:\\trave\\dtrun\\src\\main\\react\\src\\components\\user\\Login.jsx",["74","75","76"],"import React from 'react';\r\nimport '../../css/css2.css';\r\nimport socket from '../../images/socket.svg';\r\nimport axios from 'axios';\r\nimport cookie from 'react-cookies'\r\nimport {Form, Input, Button, Checkbox} from 'antd';\r\nimport {UserOutlined, LockOutlined} from '@ant-design/icons';\r\nimport {notification} from \"antd\";\r\n\r\nexport default class Login extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: '登录',\r\n        }\r\n    }\r\n\r\n\r\n    onFinish = (values) => {\r\n        axios.post('/user/login', {\r\n            account: values.account,\r\n            password: values.password,\r\n        }).then((response) => {\r\n            var result = response.data.message;\r\n            var token = response.data.data;\r\n            if (result == 'Success') {\r\n                let inFifteenMinutes = new Date(new Date().getTime() + 7 * 24 * 3600 * 1000);\r\n                cookie.save('token', token, {expires: inFifteenMinutes})\r\n                this.props.history.push({pathname:'/index'})\r\n            } else if (result == 'LoginRefuse') {\r\n                notification['error']({\r\n                    message: '通知',\r\n                    description:\r\n                        '账号已被封禁',\r\n                    duration: 2,\r\n                });\r\n            } else {\r\n                notification['error']({\r\n                    message: '通知',\r\n                    description:\r\n                        '账号或密码错误',\r\n                    duration: 2,\r\n                });\r\n            }\r\n\r\n        });\r\n\r\n    };\r\n\r\n    register() {\r\n        this.props.history.push('/register')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\" style={{marginBottom: '5%', paddingTop: '20px', minHeight: '200px'}}>\r\n                    <div className=\"col-xl-3\"></div>\r\n                    <div className=\"col-xl-6\"><img src={socket} alt=\"\" width=\"100%\" height=\"200px\"/></div>\r\n                    <div className=\"col-xl-3\">\r\n                        <div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-3\"></div>\r\n                    <div className=\"col-xl-6\">\r\n                        <div>\r\n                            <Form\r\n                                name=\"normal_login\"\r\n                                className=\"login-form\"\r\n                                initialValues={{remember: true}}\r\n                                onFinish={this.onFinish}\r\n                            >\r\n                                <Form.Item\r\n                                    name=\"account\"\r\n                                    rules={[{required: true, message: 'Please input your Username!'}]}\r\n                                >\r\n                                    <Input prefix={<UserOutlined className=\"site-form-item-icon\"/>}\r\n                                           placeholder=\"Username\"/>\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name=\"password\"\r\n                                    rules={[{required: true, message: 'Please input your Password!'}]}\r\n                                >\r\n                                    <Input.Password\r\n                                        prefix={<LockOutlined className=\"site-form-item-icon\"/>}\r\n                                        type=\"password\"\r\n                                        placeholder=\"Password\"\r\n                                    />\r\n                                </Form.Item>\r\n\r\n                                <Form.Item>\r\n                                    <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n                                        <Checkbox>记住我</Checkbox>\r\n                                    </Form.Item>\r\n\r\n                                    <a className=\"login-form-forgot\" href=\"\">\r\n                                        忘记密码\r\n                                    </a>\r\n                                </Form.Item>\r\n\r\n                                <Form.Item>\r\n                                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\"\r\n                                            style={{marginBottom: '20px'}}>\r\n                                        登录\r\n                                    </Button>\r\n                                    <Button type=\"primary\" htmlType=\"button\" className=\"login-form-button\"\r\n                                            onClick={() => this.register()}>\r\n                                        立即注册\r\n                                    </Button>\r\n                                </Form.Item>\r\n                            </Form>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-xl-3\"></div>\r\n                </div>\r\n\r\n\r\n            </div>);\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\n","D:\\trave\\dtrun\\src\\main\\react\\src\\components\\user\\Register.jsx",["77","78","79","80"],"D:\\trave\\dtrun\\src\\main\\react\\src\\components\\dashboard\\Index.jsx",[],"D:\\trave\\dtrun\\src\\main\\react\\src\\components\\datasource\\Datasource.jsx",["81"],"import React from 'react';\r\nimport Show from './Show';\r\nimport Create from './Create';\r\nimport Update from './Update';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport  Modify from \"../user/Modify\"\r\nexport default class Index extends React.Component {\r\n\r\n    render() {\r\n        return <div>           \r\n                <Switch>\r\n                    <Route path={\"/datasource/modify\"} component={Modify}/>\r\n                    <Route path=\"/datasource/create\" component={Create} />\r\n                    <Route path=\"/datasource/show\" component={Show} />\r\n                    <Route path=\"/datasource/update/:id\" component={Update} />\r\n                </Switch>      \r\n        </div>\r\n    }\r\n}\r\n\r\n\r\n","D:\\trave\\dtrun\\src\\main\\react\\src\\components\\dashboard\\Dashboard.jsx",["82"],"import React from 'react';\r\nimport socket from '../../images/socket.svg';\r\nexport default class Dashboard extends React.Component {\r\n\r\n\r\n    render() {\r\n        return <div className=\"content-wrapper\">\r\n            <div className=\"content-body\">\r\n                <div className=\"content\">\r\n                    <div className=\"card bg-primary-bright border-0\">\r\n                        <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-xl-2 col-md-3\">\r\n                                    <figure>\r\n                                        <img className=\"img-fluid\" src={socket} alt=\"upgrade\" />\r\n                                    </figure>\r\n                                </div>\r\n                                <div className=\"col-xl-10 col-md-9\">\r\n                                    <div className=\"d-md-flex align-items-center justify-content-between text-center text-md-left p-4 p-md-0\">\r\n                                        <div className=\"mr-3\">\r\n                                            <h4 className=\"mb-3\">Get an Upgrade</h4>\r\n                                            <p className=\"text-muted\">Get additional 500 GB space for your documents and files.\r\n                                            Expand\r\n                                    your storage and enjoy your business. Change plan for more space.</p>\r\n                                            <a href=\"#\" className=\"small\">Close</a>\r\n                                        </div>\r\n                                        <div className=\"flex-shrink-0 ml-3\">\r\n                                            <button className=\"btn btn-outline-primary btn-lg2\">Upgrade Now</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}","D:\\trave\\dtrun\\src\\main\\react\\src\\components\\datasource\\Create.jsx",["83","84"],"import React from 'react';\r\nimport Nav from '../common/Nav';\r\nimport axios from 'axios';\r\nimport { Form, Input, Button, Select } from 'antd';\r\nimport { notification } from 'antd';\r\nconst { Option } = Select;\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 3,\r\n    },\r\n    wrapperCol: {\r\n        span: 16,\r\n    },\r\n};\r\n\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 3,\r\n        span: 16,\r\n    },\r\n};\r\nexport default class Create extends React.Component {\r\n    formRef = React.createRef();\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    test() {\r\n\r\n        this.formRef.current.validateFields()\r\n            .then(values => {\r\n                axios.post('/dtsource/testconnection', {\r\n                    dataSourceType: values.dtsType,\r\n                    accessKey: values.accessKey,\r\n                    accessSecret: values.accessSecret,\r\n                    region: values.region,\r\n                }).then((response) => {\r\n                    var result = response.data.message;\r\n                    if (result == 'Success') {\r\n                        notification['success']({\r\n                            message: '通知',\r\n                            description:\r\n                                '测试成功',\r\n                            duration: 1,\r\n                        });\r\n                    } else {\r\n                        notification['error']({\r\n                            message: '通知',\r\n                            description:\r\n                                '测试失败,请检查参数',\r\n                            duration: 1,\r\n                        });\r\n                    }\r\n                });\r\n            })\r\n            .catch(errorInfo => {\r\n\r\n            });\r\n\r\n    }\r\n\r\n\r\n    quit() {\r\n        this.props.history.goBack();\r\n\r\n    }\r\n\r\n\r\n\r\n    onFinish = (values) => {\r\n\r\n        axios.post('/dtsource/create', {\r\n            dataSourceName: values.dtsName,\r\n            dataSourceType: values.dtsType,\r\n            secretId: values.accessKey,\r\n            secretKey: values.accessSecret,\r\n            region: values.region,\r\n        }).then((response) => {\r\n            var result = response.data.message;\r\n            if (result == 'Success') {\r\n                this.props.history.push('/datasource/show');\r\n            } else {\r\n\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return <div className=\"content-wrapper\">\r\n\r\n                <Nav />\r\n                <div className=\"content-body\">\r\n\r\n                    <div id=\"createdts\" className=\"content\" >\r\n                        <div className=\"page-header d-flex justify-content-between\">\r\n                            <h2>创建数据源</h2>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n\r\n                            <div className=\"col-xl-12 components-sidebar\">\r\n\r\n                                <Form\r\n                                    {...layout}\r\n                                    ref={this.formRef}\r\n                                    name=\"basic\"\r\n                                    initialValues={{\r\n                                        remember: true,\r\n                                    }}\r\n                                    onFinish={this.onFinish}\r\n                                >\r\n\r\n                                    <Form.Item\r\n                                        label=\"数据源名称\"\r\n                                        name=\"dtsName\"\r\n\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: '请输入数据源名称',\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input placeholder=\"请输入数据源名称\" />\r\n                                    </Form.Item>\r\n                                    <Form.Item name=\"dtsType\" label=\"数据源类型\" rules={[{ required: true, message: '请选择数据源类型' }]}>\r\n                                        <Select\r\n                                            placeholder=\"请选择数据源类型\"\r\n                                            onChange={this.onGenderChange}\r\n                                            allowClear\r\n                                        >\r\n                                            <Option value=\"cos\">COS</Option>\r\n                                            <Option value=\"oss\">OSS</Option>\r\n                                            <Option value=\"obs\">OBS</Option>\r\n                                            <Option value=\"bos\">BOS</Option>\r\n                                        </Select>\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        label=\"AccessKey\"\r\n                                        name=\"accessKey\"\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: '请输入AccessKey',\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input placeholder=\"请输入AccessKey\" />\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item\r\n                                        label=\"AccessSecret\"\r\n                                        name=\"accessSecret\"\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: '请输入AccessSecret',\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input placeholder=\"请输入AccessSecret\" />\r\n                                    </Form.Item>\r\n\r\n\r\n                                    <Form.Item\r\n                                        label=\"地域\"\r\n                                        name=\"region\"\r\n                                        rules={[\r\n                                            {\r\n\r\n                                                message: '请输入地域',\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input placeholder=\"请输入地域\" />\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item {...tailLayout}>\r\n                                        <Button type=\"primary\" htmlType=\"submit\" style={{ marginRight: '10px' }}>\r\n                                            确定\r\n                                    </Button>\r\n                                        <Button htmlType=\"button\" onClick={() => this.test()} style={{ marginRight: '10px' }}>\r\n                                            测试\r\n                                    </Button>\r\n                                        <Button htmlType=\"button\" onClick={() => this.quit()}>\r\n                                            取消\r\n                                    </Button>\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n    }\r\n}","D:\\trave\\dtrun\\src\\main\\react\\src\\components\\datasource\\Update.jsx",["85","86","87"],"import React from 'react';\r\nimport Nav from '../common/Nav';\r\nimport axios from 'axios';\r\nimport {Form, Input, Button, Select} from 'antd';\r\nimport {notification} from 'antd';\r\n\r\nconst {Option} = Select;\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 3,\r\n    },\r\n    wrapperCol: {\r\n        span: 16,\r\n    },\r\n};\r\n\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 3,\r\n        span: 16,\r\n    },\r\n};\r\nexport default class Update extends React.Component {\r\n    formRef = React.createRef();\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n\r\n\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n\r\n        this.getDts()\r\n\r\n    }\r\n\r\n\r\n    getDts() {\r\n        axios.get('/dtsource/getDtSourceById?id=' + this.props.match.params.id).then((response) => {\r\n            const result = response.data.message;\r\n            if (result == 'Success') {\r\n                const data = response.data.data;\r\n                const dtSourceJson = JSON.parse(data.dtSourceJson);\r\n                this.formRef.current.setFieldsValue(\r\n                    {\r\n                        dtsName: data.dtSourceName,\r\n                        dtsType: data.dtSourceType,\r\n                        accessKey: dtSourceJson.accessKey,\r\n                        accessSecret: dtSourceJson.accessSecret,\r\n                        region: dtSourceJson.region\r\n                    },\r\n                );\r\n            } else {\r\n                notification['error']({\r\n                    message: '通知',\r\n                    description:\r\n                        '获取数据源信息失败，请稍后重试',\r\n                    duration: 1,\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    test() {\r\n        this.formRef.current.validateFields()\r\n            .then(values => {\r\n                axios.post('/dtsource/testconnection', {\r\n                    dataSourceType: values.dtsType,\r\n                    accessKey: values.accessKey,\r\n                    accessSecret: values.accessSecret,\r\n                    region: values.region,\r\n                }).then((response) => {\r\n                    var result = response.data.message;\r\n                    if (result == 'Success') {\r\n                        notification['success']({\r\n                            message: '通知',\r\n                            description:\r\n                                '测试成功',\r\n                            duration: 1,\r\n                        });\r\n                    } else {\r\n                        notification['error']({\r\n                            message: '通知',\r\n                            description:\r\n                                '测试失败，请检查参数',\r\n                            duration: 1,\r\n                        });\r\n                    }\r\n                });\r\n            })\r\n            .catch(errorInfo => {\r\n\r\n            });\r\n\r\n    }\r\n\r\n\r\n    quit() {\r\n        this.props.history.goBack();\r\n\r\n    }\r\n\r\n\r\n    onFinish = (values) => {\r\n        axios.post('/dtsource/update', {\r\n            id: this.props.match.params.id,\r\n            dataSourceName: values.dtsName,\r\n            dataSourceType: values.dtsType,\r\n            secretId: values.accessKey,\r\n            secretKey: values.accessSecret,\r\n            region: values.region,\r\n        }).then((response) => {\r\n            var result = response.data.message;\r\n            if (result == 'Success') {\r\n                notification['success']({\r\n                    message: '通知',\r\n                    description:\r\n                        '修改成功',\r\n                    duration: 1,\r\n                });\r\n                this.props.history.push('/datasource/show');\r\n            } else {\r\n                notification['error']({\r\n                    message: '通知',\r\n                    description:\r\n                        '修改失败,请重试',\r\n                    duration: 1,\r\n                });\r\n\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n    render() {\r\n        return <div className=\"content-wrapper\">\r\n            <Nav/>\r\n            <div className=\"content-body\">\r\n\r\n                <div id=\"createdts\" className=\"content\">\r\n                    <div className=\"page-header d-flex justify-content-between\">\r\n                        <h2>修改数据源</h2>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-xl-12 components-sidebar\">\r\n\r\n                            <Form\r\n                                {...layout}\r\n                                ref={this.formRef}\r\n                                name=\"basic\"\r\n                                initialValues={{\r\n                                    remember: true,\r\n                                }}\r\n                                onFinish={this.onFinish}\r\n\r\n                            >\r\n                                <Form.Item\r\n                                    label=\"数据源名称\"\r\n                                    name=\"dtsName\"\r\n\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                            message: '请输入数据源名称',\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input placeholder=\"请输入数据源名称\"/>\r\n                                </Form.Item>\r\n                                <Form.Item name=\"dtsType\" label=\"数据源类型\" rules={[{required: true, message: '请选择数据源类型'}]}>\r\n                                    <Select\r\n                                        placeholder=\"请选择数据源类型\"\r\n                                        onChange={this.onGenderChange}\r\n                                        allowClear\r\n                                    >\r\n                                        <Option value=\"cos\">COS</Option>\r\n                                        <Option value=\"oss\">OSS</Option>\r\n                                        <Option value=\"obs\">OBS</Option>\r\n                                        <Option value=\"bos\">BOS</Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    label=\"AccessKey\"\r\n                                    name=\"accessKey\"\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                            message: '请输入AccessKey',\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input placeholder=\"请输入AccessKey\"/>\r\n                                </Form.Item>\r\n\r\n                                <Form.Item\r\n                                    label=\"AccessSecret\"\r\n                                    name=\"accessSecret\"\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                            message: '请输入AccessSecret',\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input placeholder=\"请输入AccessSecret\"/>\r\n                                </Form.Item>\r\n\r\n\r\n                                <Form.Item\r\n                                    label=\"地域\"\r\n                                    name=\"region\"\r\n                                    rules={[\r\n                                        {\r\n\r\n                                            message: '请输入地域',\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input placeholder=\"请输入地域\"/>\r\n                                </Form.Item>\r\n\r\n                                <Form.Item {...tailLayout}>\r\n                                    <Button type=\"primary\" htmlType=\"submit\" style={{marginRight: '10px'}}>\r\n                                        确定\r\n                                    </Button>\r\n                                    <Button htmlType=\"button\" onClick={() => this.test()} style={{marginRight: '10px'}}>\r\n                                        测试\r\n                                    </Button>\r\n                                    <Button htmlType=\"button\" onClick={() => this.quit()}>\r\n                                        取消\r\n                                    </Button>\r\n                                </Form.Item>\r\n                            </Form>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n\r\n\r\n    }\r\n}","D:\\trave\\dtrun\\src\\main\\react\\src\\components\\datasource\\Show.jsx",["88","89","90"],"import React, { useState, useEffect } from 'react';\r\nimport Nav from '../common/Nav'\r\nimport axios from 'axios';\r\nimport { notification, Modal, Spin } from 'antd';\r\n\r\n\r\nconst Show = (props) => {\r\n    const [list, setList] = useState([]);\r\n    const [dtsId, setDtsId] = useState(-1);\r\n    const [visible, setVisible] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [confirmLoading, setConfirmLoading] = useState(false);\r\n    const [modalText, setModalText] = useState('');\r\n\r\n\r\n    const handleOk = () => {\r\n        setConfirmLoading(true);\r\n        axios.delete('/dtsource/delete', {\r\n            data: {\r\n                id: dtsId,\r\n            }\r\n        }).then((response) => {\r\n            var result = response.data.message;\r\n            if (result == 'Success') {\r\n                setVisible(false);\r\n                setConfirmLoading(false);\r\n                fentch();\r\n            } else {\r\n                notification['error']({\r\n                    message: '通知',\r\n                    description:\r\n                        '删除失败！',\r\n                    duration: 1,\r\n                });\r\n\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setVisible(false);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        fentch();\r\n    }, []);\r\n\r\n\r\n    const fentch = () => {\r\n        setLoading(true)\r\n        axios.get('/dtsource/findAll').then((response) => {\r\n            var result = response.data.message;\r\n            var data = response.data.data;\r\n            if (result == 'Success') {\r\n                setList(data);\r\n                setLoading(false)\r\n            } else {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    const toCreate = () => {\r\n        props.history.push('/datasource/create')\r\n    }\r\n\r\n    const testDts = (id) => {\r\n        setLoading(true)\r\n        axios.post('/dtsource/connection', {\r\n            id: id,\r\n        }).then((response) => {\r\n            var result = response.data.message;\r\n            if (result == 'Success') {\r\n                setLoading(false)\r\n                notification['success']({\r\n                    message: '通知',\r\n                    description:\r\n                        '测试成功',\r\n                    duration: 1,\r\n                });\r\n            } else {\r\n                notification['error']({\r\n                    message: '通知',\r\n                    description:\r\n                        '测试失败，请检查您的参数设置',\r\n                    duration: 1,\r\n                });\r\n            }\r\n            setLoading(false)\r\n        });\r\n    }\r\n\r\n\r\n    const deleteDts = (id, dtSourceName) => {\r\n        setDtsId(id);\r\n        setModalText('您确定要删除数据源 ' + dtSourceName + ' 吗?');\r\n        setVisible(true);\r\n    }\r\n\r\n\r\n    const updateDts = (id) => {\r\n        props.history.push('/datasource/update/' + id)\r\n    }\r\n\r\n\r\n    const container = ((\r\n\r\n        <div className=\"content-wrapper\">\r\n            <Nav />\r\n\r\n            <div className=\"content-body\">\r\n\r\n                <Spin size=\"large\" spinning={loading}>\r\n\r\n                    <div id=\"listdts\" className=\"content\">\r\n                        <div className=\"row\" style={{ marginBottom: '10px' }}>\r\n                            <div className=\"col-xl-12 \">\r\n                                <button className=\"btn btn-primary pull-right\" onClick={() => toCreate()}>创建</button>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"row\">\r\n\r\n                            <div className=\"col-xl-12 components-sidebar\">\r\n                                <table id=\"table\" className=\"table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\">序号</th>\r\n                                            <th scope=\"col\">数据源名称</th>\r\n                                            <th scope=\"col\">数据源类型</th>\r\n                                            <th scope=\"col\">创建时间</th>\r\n                                            <th scope=\"col\">操作</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody id=\"dtsource\">\r\n                                        {\r\n                                            list.map((item, index) =>\r\n                                                <tr key={index}>\r\n                                                    <td>{index + 1}</td>\r\n                                                    <td><span\r\n                                                        style={{ color: '#0062FF', cursor: 'pointer', marginRight: '10px' }}\r\n                                                        onClick={() => updateDts(item.id)}>{item.dtSourceName}</span></td>\r\n                                                    <td>{item.dtSourceType}</td>\r\n                                                    <td>{item.createTime}</td>\r\n                                                    <td><span\r\n                                                        style={{ color: '#0062FF', cursor: 'pointer', marginRight: '10px' }}\r\n                                                        onClick={() => testDts(item.id)}>测试</span> <span\r\n                                                            style={{ color: '#0062FF', cursor: 'pointer' }}\r\n                                                            onClick={() => deleteDts(item.id, item.dtSourceName)}>删除</span></td>\r\n                                                </tr>\r\n                                            )\r\n                                        }\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                        <Modal\r\n                            title=\"删除数据源\"\r\n                            okText=\"确定\"\r\n                            cancelText=\"取消\"\r\n                            visible={visible}\r\n                            onOk={handleOk}\r\n                            confirmLoading={confirmLoading}\r\n                            onCancel={handleCancel}\r\n                        >\r\n                            <p>{modalText}</p>\r\n                        </Modal>\r\n                    </div>\r\n                </Spin>\r\n            </div>\r\n        </div>\r\n\r\n    ));\r\n\r\n    return container\r\n}\r\n\r\n\r\nexport default Show;\r\n","D:\\trave\\dtrun\\src\\main\\react\\src\\components\\user\\Modify.jsx",["91"],"import React from 'react';\r\nimport Nav from '../Nav';\r\nimport {Form, Input, Button, message} from 'antd';\r\nimport axios from \"axios/index\";\r\nimport {notification} from \"antd/lib/index\";\r\n\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 3,\r\n    },\r\n    wrapperCol: {\r\n        span: 16,\r\n    },\r\n};\r\n\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 3,\r\n        span: 16,\r\n    },\r\n};\r\n\r\n\r\nexport default class Modfiy extends React.Component {\r\n\r\n    onFinish = (values) => {\r\n        axios.post('http://localhost/user/modifyPassword', {\r\n            oldPassword: values.oldPassword,\r\n            newPassword: values.newPassword\r\n        }).then((response) => {\r\n            var result = response.data.message;\r\n            if (result == 'Success') {\r\n                this.props.history.push('/index');\r\n                notification['success']({\r\n                    message: '通知',\r\n                    description:\r\n                        '修改成功',\r\n                    duration: 1,\r\n                });\r\n            } else {\r\n                notification['error']({\r\n                    message: '通知',\r\n                    description:\r\n                        '旧密码错误,请重新输入',\r\n                    duration: 1,\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    quit() {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-wrapper\">\r\n\r\n                <Nav/>\r\n                <div className=\"content-body\">\r\n\r\n                    <div id=\"createdts\" className=\"content\">\r\n                        <div className=\"page-header d-flex justify-content-between\">\r\n                            <h2>修改密码</h2>\r\n                        </div>\r\n                        <Form\r\n                            {...layout}\r\n                            ref={this.formRef}\r\n                            name=\"basic\"\r\n                            initialValues={{\r\n                                remember: true,\r\n                            }}\r\n                            onFinish={this.onFinish}\r\n                        >\r\n                            <Form.Item\r\n                                label=\"旧密码\"\r\n                                name=\"oldPassword\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: '请输旧密码',\r\n                                    },\r\n                                ]}\r\n                            >\r\n\r\n                                <Input type='text'\r\n                                       placeholder=\"请输入旧密码\"/>\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                label=\"新密码\"\r\n                                name=\"newPassword\"\r\n                                rules={[\r\n                                    {\r\n                                        compare: '11111',\r\n                                        required: true,\r\n                                        message: '请输新密码',\r\n                                    },\r\n                                ]}\r\n                            >\r\n\r\n                                <input placeholder=\"请输新密码\" type=\"text\" id=\"basic_dtsName\"\r\n                                       class=\"ant-input\" value=\"\"/>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item {...tailLayout}>\r\n                                <Button type=\"primary\" htmlType=\"submit\" style={{marginRight: '10px'}}\r\n                                >\r\n                                    确定\r\n                                </Button>\r\n\r\n                                <Button htmlType=\"button\" onClick={() => this.quit()}>\r\n                                    取消\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        )\r\n\r\n    }\r\n}","D:\\trave\\dtrun\\src\\main\\react\\src\\components\\common\\Header.jsx",["92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110"],"import React from 'react';\r\nimport cookie from 'react-cookies'\r\nimport {Menu, Dropdown, Button, Space, notification} from 'antd';\r\nimport axios from \"axios\";\r\nexport default class Header extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            iconUrl: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('/user/getCurrentUser').then((response) => {\r\n            var result = response.data.message;\r\n            if (result == 'Success') {\r\n                const user = response.data.data;\r\n                this.setState({username: user.username, iconUrl: user.iconUrl})\r\n            } else {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    logout() {\r\n        cookie.remove('token');\r\n        this.props.history.push('/login')\r\n        notification['success']({\r\n            message: '通知',\r\n            description:\r\n                '注销成功',\r\n            duration: 2,\r\n        });\r\n    };\r\n    modify(){\r\n        this.props.history.push('/datasource/Modify')\r\n    }\r\n\r\n    menu = (\r\n        <Menu>\r\n            <Menu.Item>\r\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"\">\r\n                    个人中心\r\n                </a>\r\n            </Menu.Item>\r\n            <Menu.Item>\r\n                <a target=\"_blank\" rel=\"noopener noreferrer\" onClick={() => this.modify()} >\r\n                    修改密码\r\n                </a>\r\n            </Menu.Item>\r\n            <Menu.Item>\r\n                <a target=\"_blank\" rel=\"noopener noreferrer\" onClick={() => this.logout()}>\r\n                    注销\r\n                </a>\r\n            </Menu.Item>\r\n        </Menu>\r\n    );\r\n\r\n\r\n    render() {\r\n        return <div className=\"header d-print-none\">\r\n            <div className=\"header-container\">\r\n                <div className=\"header-body\">\r\n                    <div className=\"header-body-left\">\r\n                        <ul className=\"navbar-nav\">\r\n                            <li className=\"nav-item navigation-toggler\">\r\n                                <a href=\"#\" className=\"nav-link\">\r\n                                    <i className=\"ti-menu\"></i>\r\n                                </a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <div className=\"header-search-form\">\r\n                                    <form>\r\n                                        <div className=\"input-group\">\r\n                                            <div className=\"input-group-prepend\">\r\n                                                <button className=\"btn\">\r\n                                                    <i className=\"ti-search\"></i>\r\n                                                </button>\r\n                                            </div>\r\n                                            <input type=\"text\" id=\"search\" className=\"form-control\"\r\n                                                   placeholder=\"Search something...\"/>\r\n                                            <div className=\"input-group-append\">\r\n                                                <button className=\"btn header-search-close-btn\">\r\n                                                    <i data-feather=\"x\"></i>\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                    <div className=\"header-body-right\">\r\n                        <ul className=\"navbar-nav\">\r\n                            <li className=\"nav-item\">\r\n                                <a href=\"#\" className=\"nav-link mobile-header-search-btn\" title=\"Search\">\r\n                                    <i className=\"ti-search\"></i>\r\n                                </a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a href=\"#\" className=\"nav-link\" title=\"Dark\">\r\n                                    <i className=\"fa fa-moon-o\"></i>\r\n                                </a>\r\n                            </li>\r\n\r\n                            <li className=\"nav-item dropdown\">\r\n                                <a href=\"#\" className=\"nav-link nav-link-notify\" title=\"Notifications\"\r\n                                   data-toggle=\"dropdown\">\r\n                                    <i className=\"ti-bell\"></i>\r\n                                </a>\r\n                                <div className=\"dropdown-menu dropdown-menu-right dropdown-menu-big\">\r\n                                    <div className=\"bg-primary px-3 py-3\">\r\n                                        <h6 className=\"mb-0\">Notifications</h6>\r\n                                    </div>\r\n                                    <div className=\"dropdown-scroll\">\r\n                                        <ul className=\"list-group list-group-flush\">\r\n                                            <li>\r\n                                                <a href=\"#\" className=\"list-group-item d-flex hide-show-toggler\">\r\n                                                    <div>\r\n                                                        <figure className=\"avatar mr-3\">\r\n                                                            <span\r\n                                                                className=\"avatar-title bg-secondary-bright text-secondary rounded-circle\">\r\n                                                                <i className=\"ti-server\"></i>\r\n                                                            </span>\r\n                                                        </figure>\r\n                                                    </div>\r\n                                                    <div className=\"flex-grow-1\">\r\n                                                        <p className=\"mb-0\">\r\n                                                            Your storage space is running low!\r\n                                                            <i title=\"Mark as unread\" data-toggle=\"tooltip\"\r\n                                                               className=\"hide-show-toggler-item fa fa-check font-size-11 position-absolute right-0 top-0 mr-3 mt-3\"></i>\r\n                                                        </p>\r\n                                                        <span className=\"text-muted small\">4 sec ago</span>\r\n                                                    </div>\r\n                                                </a>\r\n                                            </li>\r\n                                            <li>\r\n                                                <a href=\"#\" className=\"list-group-item d-flex hide-show-toggler\">\r\n                                                    <div>\r\n                                                        <figure className=\"avatar mr-3\">\r\n                                                            <img\r\n                                                                src=\"https://cdn.jsdelivr.net/gh/WendyBoys/oss/img/icon.png\"\r\n                                                                className=\"rounded-circle\" alt=\"avatar\"/>\r\n                                                        </figure>\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <p className=\"mb-0\">\r\n                                                            <span className=\"text-primary\">Jonny Richie</span> uploaded\r\n                                                            new\r\n                                                            files\r\n                                                            <i title=\"Mark as read\" data-toggle=\"tooltip\"\r\n                                                               className=\"hide-show-toggler-item fa fa-circle-o font-size-11 position-absolute right-0 top-0 mr-3 mt-3\"></i>\r\n                                                        </p>\r\n                                                        <span className=\"text-muted small\">20 min ago</span>\r\n                                                    </div>\r\n                                                </a>\r\n                                            </li>\r\n                                            <li className=\"text-divider text-center small pb-2 px-3\">\r\n                                                <span>Old notifications</span>\r\n                                            </li>\r\n                                            <li>\r\n                                                <a href=\"#\" className=\"list-group-item d-flex hide-show-toggler\">\r\n                                                    <div>\r\n                                                        <figure className=\"avatar mr-3\">\r\n                                                            <span\r\n                                                                className=\"avatar-title bg-info-bright text-info rounded-circle\">\r\n                                                                <i className=\"fa fa-cloud-upload\"></i>\r\n                                                            </span>\r\n                                                        </figure>\r\n                                                    </div>\r\n                                                    <div className=\"flex-grow-1\">\r\n                                                        <p className=\"mb-0\">\r\n                                                            Upgrade plan\r\n                                                            <i title=\"Mark as unread\" data-toggle=\"tooltip\"\r\n                                                               className=\"hide-show-toggler-item fa fa-check font-size-11 position-absolute right-0 top-0 mr-3 mt-3\"></i>\r\n                                                        </p>\r\n                                                        <span className=\"text-muted small\">45 sec ago</span>\r\n                                                    </div>\r\n                                                </a>\r\n                                            </li>\r\n                                            <li>\r\n                                                <a href=\"#\" className=\"list-group-item d-flex hide-show-toggler\">\r\n                                                    <div>\r\n                                                        <figure className=\"avatar mr-3\">\r\n                                                            <span\r\n                                                                className=\"avatar-title bg-success-bright text-success rounded-circle\">\r\n                                                                <i className=\"ti-share\"></i>\r\n                                                            </span>\r\n                                                        </figure>\r\n                                                    </div>\r\n                                                    <div className=\"flex-grow-1\">\r\n                                                        <p className=\"mb-0\">\r\n                                                            A file has been shared\r\n                                                            <i title=\"Mark as unread\" data-toggle=\"tooltip\"\r\n                                                               className=\"hide-show-toggler-item fa fa-check font-size-11 position-absolute right-0 top-0 mr-3 mt-3\"></i>\r\n                                                        </p>\r\n                                                        <span className=\"text-muted small\">58 sec ago</span>\r\n                                                    </div>\r\n                                                </a>\r\n                                            </li>\r\n                                        </ul>\r\n                                    </div>\r\n                                    <div className=\"px-3 py-2 text-right border-top\">\r\n                                        <ul className=\"list-inline small\">\r\n                                            <li className=\"list-inline-item mb-0\">\r\n                                                <a href=\"#\">Mark All Read</a>\r\n                                            </li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n\r\n                            <li className=\"nav-item dropdown\">\r\n                                <a href=\"#\" className=\"nav-link\" title=\"Settings\" data-sidebar-target=\"#settings\">\r\n                                    <i className=\"ti-settings\"></i>\r\n                                </a>\r\n                            </li>\r\n\r\n                            <li className=\"nav-item dropdown\">\r\n                                <Dropdown overlay={this.menu} placement=\"topRight\">\r\n                                    <a href=\"#\" className=\"nav-link profile-nav-link dropdown-toggle\" title=\"User menu\">\r\n                                        <span className=\"mr-2 d-sm-inline d-none username\">{this.state.username}</span>\r\n                                        <figure className=\"avatar avatar-sm\">\r\n                                            <img src={this.state.iconUrl}\r\n                                                 className=\"rounded-circle\" alt=\"avatar\"/>\r\n                                        </figure>\r\n                                    </a>\r\n                                </Dropdown>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <li className=\"nav-item header-toggler\">\r\n                        <a href=\"#\" className=\"nav-link\">\r\n                            <i className=\"ti-arrow-down\"></i>\r\n                        </a>\r\n                    </li>\r\n                    <li className=\"nav-item sidebar-toggler\">\r\n                        <a href=\"#\" className=\"nav-link\">\r\n                            <i className=\"ti-cloud\"></i>\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    }\r\n}","D:\\trave\\dtrun\\src\\main\\react\\src\\components\\common\\Right.jsx",["111","112","113","114"],"import React from 'react';\r\nexport default class Right extends React.Component {\r\n\r\n    render() {\r\n        return <div className=\"sidebar-group d-print-none\">\r\n\r\n            <div className=\"sidebar primary-sidebar show\" id=\"storage\">\r\n                <div className=\"sidebar-header\">\r\n                    <h4>Storage Overview</h4>\r\n                </div>\r\n                <div className=\"sidebar-content\">\r\n                    <div id=\"justgage_five\" className=\"mb-3\"></div>\r\n                    <div>\r\n                        <div className=\"list-group list-group-flush mb-3\">\r\n                            <a href=\"#\" className=\"list-group-item px-0 d-flex align-items-center\">\r\n                                <div className=\"mr-3\">\r\n                                    <figure className=\"avatar\">\r\n                                        <span className=\"avatar-title bg-primary-bright text-primary rounded\">\r\n                                            <i className=\"ti-image\"></i>\r\n                                        </span>\r\n                                    </figure>\r\n                                </div>\r\n                                <div className=\"flex-grow-1\">\r\n                                    <p className=\"mb-0\">Images</p>\r\n                                    <span className=\"small text-muted\">259 Files</span>\r\n                                </div>\r\n                                <div>\r\n                                    <h5 className=\"text-primary\">15.7 GB</h5>\r\n                                </div>\r\n                            </a>\r\n                            <a href=\"#\" className=\"list-group-item px-0 d-flex align-items-center\">\r\n                                <div className=\"mr-3\">\r\n                                    <figure className=\"avatar\">\r\n                                        <span className=\"avatar-title bg-primary-bright text-primary rounded\">\r\n                                            <i className=\"ti-control-play\"></i>\r\n                                        </span>\r\n                                    </figure>\r\n                                </div>\r\n                                <div className=\"flex-grow-1\">\r\n                                    <p className=\"mb-0\">Videos</p>\r\n                                    <span className=\"small text-muted\">8 Files</span>\r\n                                </div>\r\n                                <div>\r\n                                    <h5 className=\"text-primary\">20 GB</h5>\r\n                                </div>\r\n                            </a>\r\n                            <a href=\"#\" className=\"list-group-item px-0 d-flex align-items-center\">\r\n                                <div className=\"mr-3\">\r\n                                    <figure className=\"avatar\">\r\n                                        <span className=\"avatar-title bg-primary-bright text-primary rounded\">\r\n                                            <i className=\"ti-files\"></i>\r\n                                        </span>\r\n                                    </figure>\r\n                                </div>\r\n                                <div className=\"flex-grow-1\">\r\n                                    <p className=\"mb-0\">Documents</p>\r\n                                    <span className=\"small text-muted\">46 Files</span>\r\n                                </div>\r\n                                <div>\r\n                                    <h5 className=\"text-primary\">10.5 GB</h5>\r\n                                </div>\r\n                            </a>\r\n                            <a href=\"#\" className=\"list-group-item px-0 d-flex align-items-center\">\r\n                                <div className=\"mr-3\">\r\n                                    <figure className=\"avatar\">\r\n                                        <span className=\"avatar-title bg-primary-bright text-primary rounded\">\r\n                                            <i className=\"ti-file\"></i>\r\n                                        </span>\r\n                                    </figure>\r\n                                </div>\r\n                                <div className=\"flex-grow-1\">\r\n                                    <p className=\"mb-0\">Other Files</p>\r\n                                    <span className=\"small text-muted\">50 Files</span>\r\n                                </div>\r\n                                <div>\r\n                                    <h5 className=\"text-primary\">2.8 GB</h5>\r\n                                </div>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card border shadow-none\">\r\n                        <div className=\"card-body text-center\">\r\n                            <img className=\"img-fluid mb-3\" src=\"https://cdn.jsdelivr.net/gh/WendyBoys/oss/img/icon.png\" alt=\"upgrade\" />\r\n                            <h5>Get an Upgrade</h5>\r\n                            <p className=\"text-muted\">Get additional 500 GB space for your documents and files.\r\n                            Unlock now\r\n                            for more space.</p>\r\n                            <button className=\"btn btn-primary\">Upgrade</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"sidebar-footer\">\r\n                    <button className=\"btn btn-lg btn-block btn-outline-primary\">\r\n                        <i className=\"fa fa-cloud-upload mr-3\"></i> Upload\r\n                </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n    }\r\n}","D:\\trave\\dtrun\\src\\main\\react\\src\\components\\common\\Nav.jsx",["115"],"import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport logo from '../../images/logo.png';\r\n\r\nexport default class Nav extends React.Component {\r\n\r\n    render() {\r\n        return <div className=\"navigation\">\r\n            <div className=\"logo\">\r\n                <NavLink to=\"/dashboard\">\r\n                    <img src={logo} />\r\n                </NavLink>\r\n            </div>\r\n            <ul>\r\n                <li>\r\n                    <NavLink to=\"/dashboard\">\r\n                        <i className=\"nav-link-icon ti-pie-chart\"></i>\r\n                        <span className=\"nav-link-label\">运维大盘</span>\r\n                        <span className=\"badge badge-danger badge-small\">2</span>\r\n                    </NavLink>\r\n\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/datasource/show\">\r\n                        <i className=\"nav-link-icon ti-layers\"></i>\r\n                        <span className=\"nav-link-label\">数据源管理</span>\r\n                    </NavLink>\r\n\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/movetask/show\">\r\n                        <i className=\"nav-link-icon ti-file\"></i>\r\n                        <span className=\"nav-link-label\">迁移任务管理</span>\r\n                    </NavLink>\r\n\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/syswarning\">\r\n                        <i className=\"nav-link-icon ti-pulse\"></i>\r\n                        <span className=\"nav-link-label\">系统预警</span>\r\n                        <span className=\"badge badge-warning\">New</span>\r\n                    </NavLink>\r\n\r\n                </li>\r\n                <li className=\"flex-grow-1\">\r\n                    <NavLink to=\"/users\">\r\n                        <i className=\"nav-link-icon ti-user\"></i>\r\n                        <span className=\"nav-link-label\">用户管理</span>\r\n                    </NavLink>\r\n\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/settings\">\r\n                        <i className=\"nav-link-icon ti-settings\"></i>\r\n                        <span className=\"nav-link-label\">系统设置</span>\r\n                    </NavLink>\r\n\r\n                </li>\r\n            </ul>\r\n        </div>\r\n\r\n\r\n    }\r\n}",{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":2,"column":24,"nodeType":"122","messageId":"123","endLine":2,"endColumn":32},{"ruleId":"120","severity":1,"message":"124","line":8,"column":8,"nodeType":"122","messageId":"123","endLine":8,"endColumn":18},{"ruleId":"125","severity":1,"message":"126","line":27,"column":24,"nodeType":"127","messageId":"128","endLine":27,"endColumn":26},{"ruleId":"125","severity":1,"message":"126","line":31,"column":31,"nodeType":"127","messageId":"128","endLine":31,"endColumn":33},{"ruleId":"129","severity":1,"message":"130","line":101,"column":37,"nodeType":"131","endLine":101,"endColumn":78},{"ruleId":"120","severity":1,"message":"132","line":5,"column":30,"nodeType":"122","messageId":"123","endLine":5,"endColumn":38},{"ruleId":"120","severity":1,"message":"133","line":7,"column":10,"nodeType":"122","messageId":"123","endLine":7,"endColumn":30},{"ruleId":"125","severity":1,"message":"126","line":29,"column":24,"nodeType":"127","messageId":"128","endLine":29,"endColumn":26},{"ruleId":"125","severity":1,"message":"126","line":37,"column":34,"nodeType":"127","messageId":"128","endLine":37,"endColumn":36},{"ruleId":"120","severity":1,"message":"121","line":5,"column":25,"nodeType":"122","messageId":"123","endLine":5,"endColumn":33},{"ruleId":"129","severity":1,"message":"130","line":25,"column":45,"nodeType":"131","endLine":25,"endColumn":75},{"ruleId":"125","severity":1,"message":"126","line":45,"column":32,"nodeType":"127","messageId":"128","endLine":45,"endColumn":34},{"ruleId":"125","severity":1,"message":"126","line":86,"column":24,"nodeType":"127","messageId":"128","endLine":86,"endColumn":26},{"ruleId":"125","severity":1,"message":"126","line":45,"column":24,"nodeType":"127","messageId":"128","endLine":45,"endColumn":26},{"ruleId":"125","severity":1,"message":"126","line":78,"column":32,"nodeType":"127","messageId":"128","endLine":78,"endColumn":34},{"ruleId":"125","severity":1,"message":"126","line":118,"column":24,"nodeType":"127","messageId":"128","endLine":118,"endColumn":26},{"ruleId":"125","severity":1,"message":"126","line":24,"column":24,"nodeType":"127","messageId":"128","endLine":24,"endColumn":26},{"ruleId":"125","severity":1,"message":"126","line":60,"column":24,"nodeType":"127","messageId":"128","endLine":60,"endColumn":26},{"ruleId":"125","severity":1,"message":"126","line":80,"column":24,"nodeType":"127","messageId":"128","endLine":80,"endColumn":26},{"ruleId":"125","severity":1,"message":"126","line":33,"column":24,"nodeType":"127","messageId":"128","endLine":33,"endColumn":26},{"ruleId":"120","severity":1,"message":"134","line":3,"column":25,"nodeType":"122","messageId":"123","endLine":3,"endColumn":31},{"ruleId":"120","severity":1,"message":"135","line":3,"column":33,"nodeType":"122","messageId":"123","endLine":3,"endColumn":38},{"ruleId":"125","severity":1,"message":"126","line":18,"column":24,"nodeType":"127","messageId":"128","endLine":18,"endColumn":26},{"ruleId":"129","severity":1,"message":"130","line":45,"column":17,"nodeType":"131","endLine":45,"endColumn":70},{"ruleId":"129","severity":1,"message":"136","line":50,"column":17,"nodeType":"131","endLine":50,"endColumn":93},{"ruleId":"129","severity":1,"message":"136","line":55,"column":17,"nodeType":"131","endLine":55,"endColumn":92},{"ruleId":"129","severity":1,"message":"130","line":70,"column":33,"nodeType":"131","endLine":70,"endColumn":66},{"ruleId":"129","severity":1,"message":"130","line":100,"column":33,"nodeType":"131","endLine":100,"endColumn":106},{"ruleId":"129","severity":1,"message":"130","line":105,"column":33,"nodeType":"131","endLine":105,"endColumn":79},{"ruleId":"129","severity":1,"message":"130","line":111,"column":33,"nodeType":"131","endLine":112,"endColumn":59},{"ruleId":"129","severity":1,"message":"130","line":122,"column":49,"nodeType":"131","endLine":122,"endColumn":114},{"ruleId":"129","severity":1,"message":"130","line":142,"column":49,"nodeType":"131","endLine":142,"endColumn":114},{"ruleId":"129","severity":1,"message":"130","line":166,"column":49,"nodeType":"131","endLine":166,"endColumn":114},{"ruleId":"129","severity":1,"message":"130","line":186,"column":49,"nodeType":"131","endLine":186,"endColumn":114},{"ruleId":"129","severity":1,"message":"130","line":210,"column":49,"nodeType":"131","endLine":210,"endColumn":61},{"ruleId":"129","severity":1,"message":"130","line":218,"column":33,"nodeType":"131","endLine":218,"endColumn":115},{"ruleId":"129","severity":1,"message":"130","line":225,"column":37,"nodeType":"131","endLine":225,"endColumn":121},{"ruleId":"129","severity":1,"message":"130","line":240,"column":25,"nodeType":"131","endLine":240,"endColumn":58},{"ruleId":"129","severity":1,"message":"130","line":245,"column":25,"nodeType":"131","endLine":245,"endColumn":58},{"ruleId":"129","severity":1,"message":"130","line":15,"column":29,"nodeType":"131","endLine":15,"endColumn":100},{"ruleId":"129","severity":1,"message":"130","line":31,"column":29,"nodeType":"131","endLine":31,"endColumn":100},{"ruleId":"129","severity":1,"message":"130","line":47,"column":29,"nodeType":"131","endLine":47,"endColumn":100},{"ruleId":"129","severity":1,"message":"130","line":63,"column":29,"nodeType":"131","endLine":63,"endColumn":100},{"ruleId":"137","severity":1,"message":"138","line":11,"column":21,"nodeType":"131","endLine":11,"endColumn":39},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Datasource' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Checkbox' is defined but never used.","'createFromIconfontCN' is defined but never used.","'Button' is defined but never used.","'Space' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]