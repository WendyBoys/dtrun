[{"D:\\trave\\dtrun\\src\\main\\react\\src\\index.js":"1","D:\\trave\\dtrun\\src\\main\\react\\src\\components\\App.jsx":"2","D:\\trave\\dtrun\\src\\main\\react\\src\\components\\Index.jsx":"3","D:\\trave\\dtrun\\src\\main\\react\\src\\components\\datasource\\Datasource.jsx":"4","D:\\trave\\dtrun\\src\\main\\react\\src\\components\\user\\Register.jsx":"5","D:\\trave\\dtrun\\src\\main\\react\\src\\components\\user\\Login.jsx":"6","D:\\trave\\dtrun\\src\\main\\react\\src\\components\\Dashboard.jsx":"7","D:\\trave\\dtrun\\src\\main\\react\\src\\components\\Nav.jsx":"8","D:\\trave\\dtrun\\src\\main\\react\\src\\components\\Right.jsx":"9","D:\\trave\\dtrun\\src\\main\\react\\src\\components\\datasource\\Create.jsx":"10","D:\\trave\\dtrun\\src\\main\\react\\src\\components\\datasource\\Show.jsx":"11","D:\\trave\\dtrun\\src\\main\\react\\src\\components\\Header.jsx":"12","D:\\trave\\dtrun\\src\\main\\react\\src\\components\\datasource\\Update.jsx":"13","D:\\trave\\dtrun\\src\\main\\react\\src\\components\\datasource\\Modify.jsx":"14"},{"size":280,"mtime":1607427001795,"results":"15","hashOfConfig":"16"},{"size":2155,"mtime":1607502292528,"results":"17","hashOfConfig":"16"},{"size":825,"mtime":1607516578052,"results":"18","hashOfConfig":"16"},{"size":776,"mtime":1607517150820,"results":"19","hashOfConfig":"16"},{"size":4267,"mtime":1607502292531,"results":"20","hashOfConfig":"16"},{"size":5088,"mtime":1607502292531,"results":"21","hashOfConfig":"16"},{"size":2103,"mtime":1607427001760,"results":"22","hashOfConfig":"16"},{"size":2296,"mtime":1607427001761,"results":"23","hashOfConfig":"16"},{"size":5629,"mtime":1607427001761,"results":"24","hashOfConfig":"16"},{"size":7919,"mtime":1607520740978,"results":"25","hashOfConfig":"16"},{"size":6473,"mtime":1607524745314,"results":"26","hashOfConfig":"16"},{"size":14391,"mtime":1607517203045,"results":"27","hashOfConfig":"16"},{"size":9123,"mtime":1607427001764,"results":"28","hashOfConfig":"16"},{"size":4372,"mtime":1607588363791,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"11tmelg",{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"32"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"32"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\trave\\dtrun\\src\\main\\react\\src\\index.js",[],["70","71"],"D:\\trave\\dtrun\\src\\main\\react\\src\\components\\App.jsx",["72","73"],"import React from 'react';\r\nimport {Route, Switch, Redirect} from 'react-router-dom';\r\nimport Login from './user/Login';\r\nimport Index from './Index';\r\nimport axios from 'axios';\r\nimport cookie from 'react-cookies'\r\nimport Register from './user/Register';\r\nimport Datasource from \"./datasource/Datasource\";\r\n\r\n\r\nimport 'antd/dist/antd.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '../css/css2.css';\r\nimport '../css/bundle.css';\r\nimport '../css/prism.css';\r\nimport '../css/app.css';\r\nimport {notification} from \"antd\";\r\n\r\nexport default class App extends React.Component {\r\n\r\n\r\n    componentWillMount() {\r\n        axios.interceptors.request.use(function (config) {\r\n            const currentUrl = window.location.href;\r\n            const token = cookie.load('token');\r\n            if (currentUrl.endsWith('/') || currentUrl.endsWith('login') || currentUrl.endsWith('register')) {\r\n\r\n            } else {\r\n                if (token === undefined || token.trim() === '') {\r\n                    window.location.href = '/login'\r\n                }\r\n            }\r\n            config.headers.common['token'] = token;\r\n            return config;\r\n        });\r\n\r\n        axios.interceptors.response.use(function (response) {\r\n            // Do something with response data\r\n            return response;\r\n        }, error => {\r\n            if (error) {\r\n                notification['error']({\r\n                    message: '通知',\r\n                    description:\r\n                        '操作失败，请稍后重试！',\r\n                    duration: 2,\r\n                });\r\n            }\r\n            return Promise.reject(error);\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        return <div>\r\n            <Switch>\r\n                <Route path=\"/register\" component={Register}/>\r\n                <Route path=\"/login\" component={Login}/>\r\n                <Route exact={true} path=\"/\" component={Login}/>\r\n                <Route path=\"/index\" component={Index}/>\r\n                <Route path=\"/dashboard\" component={Index}/>\r\n                <Route path=\"/datasource\" component={Index}/>\r\n            </Switch>\r\n        </div>\r\n\r\n    }\r\n}\r\n\r\n","D:\\trave\\dtrun\\src\\main\\react\\src\\components\\Index.jsx",[],"D:\\trave\\dtrun\\src\\main\\react\\src\\components\\datasource\\Datasource.jsx",["74","75","76"],"import React from 'react';\r\nimport Show from './Show';\r\nimport Create from './Create';\r\nimport Update from './Update';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport Header from \"../Header\";\r\nimport Right from \"../Right\";\r\nimport  Modify from \"./Modify\"\r\nexport default class Index extends React.Component {\r\n\r\n    render() {\r\n        return <div>           \r\n                <Switch>\r\n                    <Route path={\"/datasource/modify\"} component={Modify}/>\r\n                    <Route path=\"/datasource/create\" component={Create} />\r\n                    <Route path=\"/datasource/show\" component={Show} />\r\n                    <Route path=\"/datasource/update/:id\" component={Update} />\r\n                </Switch>      \r\n        </div>\r\n    }\r\n}\r\n\r\n\r\n","D:\\trave\\dtrun\\src\\main\\react\\src\\components\\user\\Register.jsx",["77","78"],"import React from 'react';\r\nimport '../../css/css2.css';\r\nimport socket from '../../images/socket.svg';\r\nimport axios from 'axios';\r\nimport {Form, Input, Button, Checkbox, notification} from 'antd';\r\nimport {UserOutlined, LockOutlined} from '@ant-design/icons';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nexport default class Register extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: '注册',\r\n        }\r\n    }\r\n\r\n\r\n    onFinish = (values) => {\r\n        axios.post('http://localhost/user/register', {\r\n            account: values.account,\r\n            password: values.password,\r\n        }).then((response) => {\r\n            const result = response.data.message;\r\n            if (result == 'Success') {\r\n                this.props.history.push('/login')\r\n                notification['success']({\r\n                    message: '通知',\r\n                    description:\r\n                        '注册成功',\r\n                    duration: 2,\r\n                });\r\n            } else {\r\n                notification['error']({\r\n                    message: '通知',\r\n                    description:\r\n                        '注册失败，请稍后重试',\r\n                    duration: 2,\r\n                });\r\n            }\r\n        });\r\n\r\n    };\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\" style={{marginBottom: '5%', paddingTop: '20px', minHeight: '200px'}}>\r\n                    <div className=\"col-xl-3\"></div>\r\n                    <div className=\"col-xl-6\"><img src={socket} alt=\"\" width=\"100%\" height=\"200px\"/></div>\r\n                    <div className=\"col-xl-3\">\r\n                        <div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-3\"></div>\r\n                    <div className=\"col-xl-6\">\r\n                        <div>\r\n                            <Form\r\n                                name=\"normal_login\"\r\n                                className=\"login-form\"\r\n                                initialValues={{remember: true}}\r\n                                onFinish={this.onFinish}\r\n                            >\r\n                                <Form.Item\r\n                                    name=\"account\"\r\n                                    rules={[{required: true, message: 'Please input your Username!'}]}\r\n                                >\r\n                                    <Input prefix={<UserOutlined className=\"site-form-item-icon\"/>}\r\n                                           placeholder=\"Username\"/>\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name=\"password\"\r\n                                    rules={[{required: true, message: 'Please input your Password!'}]}\r\n                                >\r\n                                    <Input.Password\r\n                                        prefix={<LockOutlined className=\"site-form-item-icon\"/>}\r\n                                        type=\"password\"\r\n                                        placeholder=\"Password\"\r\n                                    />\r\n                                </Form.Item>\r\n                                <Form.Item>\r\n\r\n\r\n                                    <NavLink className=\"login-form-forgot\" to=\"/login\">\r\n                                        已有账号？去登录\r\n                                    </NavLink>\r\n                                </Form.Item>\r\n\r\n                                <Form.Item>\r\n                                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\"\r\n                                            style={{marginBottom: '20px'}}>\r\n                                        立即注册\r\n                                    </Button>\r\n                                </Form.Item>\r\n                            </Form>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-xl-3\"></div>\r\n                </div>\r\n\r\n\r\n            </div>);\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\n","D:\\trave\\dtrun\\src\\main\\react\\src\\components\\user\\Login.jsx",["79","80","81"],"import React from 'react';\r\nimport '../../css/css2.css';\r\nimport socket from '../../images/socket.svg';\r\nimport axios from 'axios';\r\nimport cookie from 'react-cookies'\r\nimport {Form, Input, Button, Checkbox} from 'antd';\r\nimport {UserOutlined, LockOutlined} from '@ant-design/icons';\r\nimport {notification} from \"antd\";\r\n\r\nexport default class Login extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: '登录',\r\n        }\r\n    }\r\n\r\n\r\n    onFinish = (values) => {\r\n        axios.post('http://localhost/user/login', {\r\n            account: values.account,\r\n            password: values.password,\r\n        }).then((response) => {\r\n            var result = response.data.message;\r\n            var token = response.data.data;\r\n            if (result == 'Success') {\r\n                let inFifteenMinutes = new Date(new Date().getTime() + 7 * 24 * 3600 * 1000);\r\n                cookie.save('token', token, {expires: inFifteenMinutes})\r\n                this.props.history.push({pathname:'/index'})\r\n            } else if (result == 'LoginRefuse') {\r\n                notification['error']({\r\n                    message: '通知',\r\n                    description:\r\n                        '账号已被封禁',\r\n                    duration: 2,\r\n                });\r\n            } else {\r\n                notification['error']({\r\n                    message: '通知',\r\n                    description:\r\n                        '账号或密码错误',\r\n                    duration: 2,\r\n                });\r\n            }\r\n\r\n        });\r\n\r\n    };\r\n\r\n    register() {\r\n        this.props.history.push('/register')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\" style={{marginBottom: '5%', paddingTop: '20px', minHeight: '200px'}}>\r\n                    <div className=\"col-xl-3\"></div>\r\n                    <div className=\"col-xl-6\"><img src={socket} alt=\"\" width=\"100%\" height=\"200px\"/></div>\r\n                    <div className=\"col-xl-3\">\r\n                        <div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-3\"></div>\r\n                    <div className=\"col-xl-6\">\r\n                        <div>\r\n                            <Form\r\n                                name=\"normal_login\"\r\n                                className=\"login-form\"\r\n                                initialValues={{remember: true}}\r\n                                onFinish={this.onFinish}\r\n                            >\r\n                                <Form.Item\r\n                                    name=\"account\"\r\n                                    rules={[{required: true, message: 'Please input your Username!'}]}\r\n                                >\r\n                                    <Input prefix={<UserOutlined className=\"site-form-item-icon\"/>}\r\n                                           placeholder=\"Username\"/>\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name=\"password\"\r\n                                    rules={[{required: true, message: 'Please input your Password!'}]}\r\n                                >\r\n                                    <Input.Password\r\n                                        prefix={<LockOutlined className=\"site-form-item-icon\"/>}\r\n                                        type=\"password\"\r\n                                        placeholder=\"Password\"\r\n                                    />\r\n                                </Form.Item>\r\n                                <Form.Item>\r\n                                    <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n                                        <Checkbox>记住我</Checkbox>\r\n                                    </Form.Item>\r\n\r\n                                    <a className=\"login-form-forgot\" href=\"\">\r\n                                        忘记密码\r\n                                    </a>\r\n                                </Form.Item>\r\n\r\n                                <Form.Item>\r\n                                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\"\r\n                                            style={{marginBottom: '20px'}}>\r\n                                        登录\r\n                                    </Button>\r\n                                    <Button type=\"primary\" htmlType=\"button\" className=\"login-form-button\"\r\n                                            onClick={() => this.register()}>\r\n                                        立即注册\r\n                                    </Button>\r\n                                </Form.Item>\r\n                            </Form>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-xl-3\"></div>\r\n                </div>\r\n\r\n\r\n            </div>);\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\n","D:\\trave\\dtrun\\src\\main\\react\\src\\components\\Dashboard.jsx",["82","83","84"],"import React from 'react';\r\nimport socket from '../images/socket.svg';\r\nimport axios from 'axios';\r\nimport cookie from 'react-cookies'\r\nexport default class Dashboard extends React.Component {\r\n\r\n\r\n    render() {\r\n        return <div className=\"content-wrapper\">\r\n            <div className=\"content-body\">\r\n                <div className=\"content\">\r\n                    <div className=\"card bg-primary-bright border-0\">\r\n                        <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-xl-2 col-md-3\">\r\n                                    <figure>\r\n                                        <img className=\"img-fluid\" src={socket} alt=\"upgrade\" />\r\n                                    </figure>\r\n                                </div>\r\n                                <div className=\"col-xl-10 col-md-9\">\r\n                                    <div className=\"d-md-flex align-items-center justify-content-between text-center text-md-left p-4 p-md-0\">\r\n                                        <div className=\"mr-3\">\r\n                                            <h4 className=\"mb-3\">Get an Upgrade</h4>\r\n                                            <p className=\"text-muted\">Get additional 500 GB space for your documents and files.\r\n                                            Expand\r\n                                    your storage and enjoy your business. Change plan for more space.</p>\r\n                                            <a href=\"#\" className=\"small\">Close</a>\r\n                                        </div>\r\n                                        <div className=\"flex-shrink-0 ml-3\">\r\n                                            <button className=\"btn btn-outline-primary btn-lg2\">Upgrade Now</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}","D:\\trave\\dtrun\\src\\main\\react\\src\\components\\Nav.jsx",["85"],"import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport logo from '../images/logo.png';\r\n\r\nexport default class Nav extends React.Component {\r\n\r\n    render() {\r\n        return <div className=\"navigation\">\r\n            <div className=\"logo\">\r\n                <NavLink to=\"/dashboard\">\r\n                    <img src={logo} />\r\n                </NavLink>\r\n            </div>\r\n            <ul>\r\n                <li>\r\n                    <NavLink to=\"/dashboard\">\r\n                        <i className=\"nav-link-icon ti-pie-chart\"></i>\r\n                        <span className=\"nav-link-label\">运维大盘</span>\r\n                        <span className=\"badge badge-danger badge-small\">2</span>\r\n                    </NavLink>\r\n\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/datasource/show\">\r\n                        <i className=\"nav-link-icon ti-layers\"></i>\r\n                        <span className=\"nav-link-label\">数据源管理</span>\r\n                    </NavLink>\r\n\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/movetask/show\">\r\n                        <i className=\"nav-link-icon ti-file\"></i>\r\n                        <span className=\"nav-link-label\">迁移任务管理</span>\r\n                    </NavLink>\r\n\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/syswarning\">\r\n                        <i className=\"nav-link-icon ti-pulse\"></i>\r\n                        <span className=\"nav-link-label\">系统预警</span>\r\n                        <span className=\"badge badge-warning\">New</span>\r\n                    </NavLink>\r\n\r\n                </li>\r\n                <li className=\"flex-grow-1\">\r\n                    <NavLink to=\"/users\">\r\n                        <i className=\"nav-link-icon ti-user\"></i>\r\n                        <span className=\"nav-link-label\">用户管理</span>\r\n                    </NavLink>\r\n\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/settings\">\r\n                        <i className=\"nav-link-icon ti-settings\"></i>\r\n                        <span className=\"nav-link-label\">系统设置</span>\r\n                    </NavLink>\r\n\r\n                </li>\r\n            </ul>\r\n        </div>\r\n\r\n\r\n    }\r\n}","D:\\trave\\dtrun\\src\\main\\react\\src\\components\\Right.jsx",["86","87","88","89"],"import React from 'react';\r\nexport default class Right extends React.Component {\r\n\r\n    render() {\r\n        return <div className=\"sidebar-group d-print-none\">\r\n\r\n            <div className=\"sidebar primary-sidebar show\" id=\"storage\">\r\n                <div className=\"sidebar-header\">\r\n                    <h4>Storage Overview</h4>\r\n                </div>\r\n                <div className=\"sidebar-content\">\r\n                    <div id=\"justgage_five\" className=\"mb-3\"></div>\r\n                    <div>\r\n                        <div className=\"list-group list-group-flush mb-3\">\r\n                            <a href=\"#\" className=\"list-group-item px-0 d-flex align-items-center\">\r\n                                <div className=\"mr-3\">\r\n                                    <figure className=\"avatar\">\r\n                                        <span className=\"avatar-title bg-primary-bright text-primary rounded\">\r\n                                            <i className=\"ti-image\"></i>\r\n                                        </span>\r\n                                    </figure>\r\n                                </div>\r\n                                <div className=\"flex-grow-1\">\r\n                                    <p className=\"mb-0\">Images</p>\r\n                                    <span className=\"small text-muted\">259 Files</span>\r\n                                </div>\r\n                                <div>\r\n                                    <h5 className=\"text-primary\">15.7 GB</h5>\r\n                                </div>\r\n                            </a>\r\n                            <a href=\"#\" className=\"list-group-item px-0 d-flex align-items-center\">\r\n                                <div className=\"mr-3\">\r\n                                    <figure className=\"avatar\">\r\n                                        <span className=\"avatar-title bg-primary-bright text-primary rounded\">\r\n                                            <i className=\"ti-control-play\"></i>\r\n                                        </span>\r\n                                    </figure>\r\n                                </div>\r\n                                <div className=\"flex-grow-1\">\r\n                                    <p className=\"mb-0\">Videos</p>\r\n                                    <span className=\"small text-muted\">8 Files</span>\r\n                                </div>\r\n                                <div>\r\n                                    <h5 className=\"text-primary\">20 GB</h5>\r\n                                </div>\r\n                            </a>\r\n                            <a href=\"#\" className=\"list-group-item px-0 d-flex align-items-center\">\r\n                                <div className=\"mr-3\">\r\n                                    <figure className=\"avatar\">\r\n                                        <span className=\"avatar-title bg-primary-bright text-primary rounded\">\r\n                                            <i className=\"ti-files\"></i>\r\n                                        </span>\r\n                                    </figure>\r\n                                </div>\r\n                                <div className=\"flex-grow-1\">\r\n                                    <p className=\"mb-0\">Documents</p>\r\n                                    <span className=\"small text-muted\">46 Files</span>\r\n                                </div>\r\n                                <div>\r\n                                    <h5 className=\"text-primary\">10.5 GB</h5>\r\n                                </div>\r\n                            </a>\r\n                            <a href=\"#\" className=\"list-group-item px-0 d-flex align-items-center\">\r\n                                <div className=\"mr-3\">\r\n                                    <figure className=\"avatar\">\r\n                                        <span className=\"avatar-title bg-primary-bright text-primary rounded\">\r\n                                            <i className=\"ti-file\"></i>\r\n                                        </span>\r\n                                    </figure>\r\n                                </div>\r\n                                <div className=\"flex-grow-1\">\r\n                                    <p className=\"mb-0\">Other Files</p>\r\n                                    <span className=\"small text-muted\">50 Files</span>\r\n                                </div>\r\n                                <div>\r\n                                    <h5 className=\"text-primary\">2.8 GB</h5>\r\n                                </div>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card border shadow-none\">\r\n                        <div className=\"card-body text-center\">\r\n                            <img className=\"img-fluid mb-3\" src=\"https://cdn.jsdelivr.net/gh/WendyBoys/oss/img/icon.png\" alt=\"upgrade\" />\r\n                            <h5>Get an Upgrade</h5>\r\n                            <p className=\"text-muted\">Get additional 500 GB space for your documents and files.\r\n                            Unlock now\r\n                            for more space.</p>\r\n                            <button className=\"btn btn-primary\">Upgrade</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"sidebar-footer\">\r\n                    <button className=\"btn btn-lg btn-block btn-outline-primary\">\r\n                        <i className=\"fa fa-cloud-upload mr-3\"></i> Upload\r\n                </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n    }\r\n}","D:\\trave\\dtrun\\src\\main\\react\\src\\components\\datasource\\Create.jsx",["90","91","92","93"],"import React from 'react';\r\nimport Nav from '../Nav';\r\nimport axios from 'axios';\r\nimport { Form, Input, Button, Select } from 'antd';\r\nimport { notification } from 'antd';\r\nimport Header from '../Header'\r\nimport Right from '../Right'\r\nconst { Option } = Select;\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 3,\r\n    },\r\n    wrapperCol: {\r\n        span: 16,\r\n    },\r\n};\r\n\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 3,\r\n        span: 16,\r\n    },\r\n};\r\nexport default class Create extends React.Component {\r\n    formRef = React.createRef();\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    test() {\r\n\r\n        this.formRef.current.validateFields()\r\n            .then(values => {\r\n                axios.post('http://localhost/dtsource/testconnection', {\r\n                    dataSourceType: values.dtsType,\r\n                    accessKey: values.accessKey,\r\n                    accessSecret: values.accessSecret,\r\n                    region: values.region,\r\n                }).then((response) => {\r\n                    var result = response.data.message;\r\n                    if (result == 'Success') {\r\n                        notification['success']({\r\n                            message: '通知',\r\n                            description:\r\n                                '测试成功',\r\n                            duration: 1,\r\n                        });\r\n                    } else {\r\n                        notification['error']({\r\n                            message: '通知',\r\n                            description:\r\n                                '测试失败,请检查参数',\r\n                            duration: 1,\r\n                        });\r\n                    }\r\n                });\r\n            })\r\n            .catch(errorInfo => {\r\n\r\n            });\r\n\r\n    }\r\n\r\n\r\n    quit() {\r\n        this.props.history.goBack();\r\n\r\n    }\r\n\r\n\r\n\r\n    onFinish = (values) => {\r\n\r\n        axios.post('http://localhost/dtsource/create', {\r\n            dataSourceName: values.dtsName,\r\n            dataSourceType: values.dtsType,\r\n            secretId: values.accessKey,\r\n            secretKey: values.accessSecret,\r\n            region: values.region,\r\n        }).then((response) => {\r\n            var result = response.data.message;\r\n            if (result == 'Success') {\r\n                this.props.history.push('/datasource/show');\r\n            } else {\r\n\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return <div className=\"content-wrapper\">\r\n\r\n                <Nav />\r\n                <div className=\"content-body\">\r\n\r\n                    <div id=\"createdts\" className=\"content\" >\r\n                        <div className=\"page-header d-flex justify-content-between\">\r\n                            <h2>创建数据源</h2>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n\r\n                            <div className=\"col-xl-12 components-sidebar\">\r\n\r\n                                <Form\r\n                                    {...layout}\r\n                                    ref={this.formRef}\r\n                                    name=\"basic\"\r\n                                    initialValues={{\r\n                                        remember: true,\r\n                                    }}\r\n                                    onFinish={this.onFinish}\r\n                                >\r\n\r\n                                    <Form.Item\r\n                                        label=\"数据源名称\"\r\n                                        name=\"dtsName\"\r\n\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: '请输入数据源名称',\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input placeholder=\"请输入数据源名称\" />\r\n                                    </Form.Item>\r\n                                    <Form.Item name=\"dtsType\" label=\"数据源类型\" rules={[{ required: true, message: '请选择数据源类型' }]}>\r\n                                        <Select\r\n                                            placeholder=\"请选择数据源类型\"\r\n                                            onChange={this.onGenderChange}\r\n                                            allowClear\r\n                                        >\r\n                                            <Option value=\"cos\">COS</Option>\r\n                                            <Option value=\"oss\">OSS</Option>\r\n                                            <Option value=\"obs\">OBS</Option>\r\n                                            <Option value=\"bos\">BOS</Option>\r\n                                        </Select>\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        label=\"AccessKey\"\r\n                                        name=\"accessKey\"\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: '请输入AccessKey',\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input placeholder=\"请输入AccessKey\" />\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item\r\n                                        label=\"AccessSecret\"\r\n                                        name=\"accessSecret\"\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: '请输入AccessSecret',\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input placeholder=\"请输入AccessSecret\" />\r\n                                    </Form.Item>\r\n\r\n\r\n                                    <Form.Item\r\n                                        label=\"地域\"\r\n                                        name=\"region\"\r\n                                        rules={[\r\n                                            {\r\n\r\n                                                message: '请输入地域',\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input placeholder=\"请输入地域\" />\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item {...tailLayout}>\r\n                                        <Button type=\"primary\" htmlType=\"submit\" style={{ marginRight: '10px' }}>\r\n                                            确定\r\n                                    </Button>\r\n                                        <Button htmlType=\"button\" onClick={() => this.test()} style={{ marginRight: '10px' }}>\r\n                                            测试\r\n                                    </Button>\r\n                                        <Button htmlType=\"button\" onClick={() => this.quit()}>\r\n                                            取消\r\n                                    </Button>\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n    }\r\n}","D:\\trave\\dtrun\\src\\main\\react\\src\\components\\datasource\\Show.jsx",["94","95","96"],"import React, {useState, useEffect} from 'react';\r\nimport Nav from '../Nav'\r\nimport axios from 'axios';\r\nimport {notification, Modal, Spin} from 'antd';\r\n\r\n\r\nconst Show = (props) => {\r\n    const [list, setList] = useState([]);\r\n    const [dtsId, setDtsId] = useState(-1);\r\n    const [visible, setVisible] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [confirmLoading, setConfirmLoading] = useState(false);\r\n    const [modalText, setModalText] = useState('');\r\n\r\n\r\n    const handleOk = () => {\r\n        setConfirmLoading(true);\r\n        axios.delete('http://localhost/dtsource/delete', {\r\n            data: {\r\n                id: dtsId,\r\n            }\r\n        }).then((response) => {\r\n            var result = response.data.message;\r\n            if (result == 'Success') {\r\n                setVisible(false);\r\n                setConfirmLoading(false);\r\n                fentch();\r\n            } else {\r\n                notification['error']({\r\n                    message: '通知',\r\n                    description:\r\n                        '删除失败！',\r\n                    duration: 1,\r\n                });\r\n\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setVisible(false);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        fentch();\r\n    }, []);\r\n\r\n\r\n    const fentch = () => {\r\n        setLoading(true)\r\n        axios.get('http://localhost/dtsource/findAll').then((response) => {\r\n            var result = response.data.message;\r\n            var data = response.data.data;\r\n            if (result == 'Success') {\r\n                setList(data);\r\n                setLoading(false)\r\n            } else {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    const toCreate = () => {\r\n        props.history.push('/datasource/create')\r\n    }\r\n\r\n    const testDts = (id) => {\r\n        setLoading(true)\r\n        axios.post('http://localhost/dtsource/connection', {\r\n            id: id,\r\n        }).then((response) => {\r\n            var result = response.data.message;\r\n            if (result == 'Success') {\r\n                setLoading(false)\r\n                notification['success']({\r\n                    message: '通知',\r\n                    description:\r\n                        '测试成功',\r\n                    duration: 1,\r\n                });\r\n            } else {\r\n                notification['error']({\r\n                    message: '通知',\r\n                    description:\r\n                        '测试失败，请检查您的参数设置',\r\n                    duration: 1,\r\n                });\r\n            }\r\n            setLoading(false)\r\n        });\r\n    }\r\n\r\n\r\n    const deleteDts = (id, dtSourceName) => {\r\n        setDtsId(id);\r\n        setModalText('您确定要删除数据源 ' + dtSourceName + ' 吗?');\r\n        setVisible(true);\r\n    }\r\n\r\n\r\n    const updateDts = (id) => {\r\n        props.history.push('/datasource/update/' + id)\r\n    }\r\n\r\n\r\n    const container = ((\r\n\r\n        <div className=\"content-wrapper\">\r\n            <Nav/>\r\n\r\n            <div className=\"content-body\">\r\n\r\n                <Spin size=\"large\" spinning={loading}>\r\n\r\n                    <div id=\"listdts\" className=\"content\">\r\n                        <div className=\"row\" style={{marginBottom: '10px'}}>\r\n                            <div className=\"col-xl-12 \">\r\n                                <button className=\"btn btn-primary pull-right\" onClick={() => toCreate()}>创建</button>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"row\">\r\n\r\n                            <div className=\"col-xl-12 components-sidebar\">\r\n                                <table id=\"table\" className=\"table\">\r\n                                    <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">序号</th>\r\n                                        <th scope=\"col\">数据源名称</th>\r\n                                        <th scope=\"col\">数据源类型</th>\r\n                                        <th scope=\"col\">创建时间</th>\r\n                                        <th scope=\"col\">操作</th>\r\n                                    </tr>\r\n                                    </thead>\r\n                                    <tbody id=\"dtsource\">\r\n                                    {\r\n                                        list.map((item, index) =>\r\n                                            <tr key={index}>\r\n                                                <td>{index + 1}</td>\r\n                                                <td><span\r\n                                                    style={{color: '#0062FF', cursor: 'pointer', marginRight: '10px'}}\r\n                                                    onClick={() => updateDts(item.id)}>{item.dtSourceName}</span></td>\r\n                                                <td>{item.dtSourceType}</td>\r\n                                                <td>{item.createTime}</td>\r\n                                                <td><span\r\n                                                    style={{color: '#0062FF', cursor: 'pointer', marginRight: '10px'}}\r\n                                                    onClick={() => testDts(item.id)}>测试</span> <span\r\n                                                    style={{color: '#0062FF', cursor: 'pointer'}}\r\n                                                    onClick={() => deleteDts(item.id, item.dtSourceName)}>删除</span></td>\r\n                                            </tr>\r\n                                        )\r\n                                    }\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                        <Modal\r\n                            title=\"删除数据源\"\r\n                            okText=\"确定\"\r\n                            cancelText=\"取消\"\r\n                            visible={visible}\r\n                            onOk={handleOk}\r\n                            confirmLoading={confirmLoading}\r\n                            onCancel={handleCancel}\r\n                        >\r\n                            <p>{modalText}</p>\r\n                        </Modal>\r\n                    </div>\r\n                </Spin>\r\n            </div>\r\n        </div>\r\n\r\n    ));\r\n\r\n    return container\r\n}\r\n\r\n\r\nexport default Show;\r\n","D:\\trave\\dtrun\\src\\main\\react\\src\\components\\Header.jsx",["97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115"],"import React from 'react';\nimport cookie from 'react-cookies'\nimport {Menu, Dropdown, Button, Space, notification} from 'antd';\nimport axios from \"axios\";\n\nexport default class Header extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            iconUrl: '',\n        }\n    }\n\n    componentDidMount() {\n        axios.get('http://localhost/user/getCurrentUser').then((response) => {\n            var result = response.data.message;\n            if (result == 'Success') {\n                const user = response.data.data;\n                this.setState({username: user.username, iconUrl: user.iconUrl})\n            } else {\n\n            }\n        });\n    }\n\n\n    logout() {\n        cookie.remove('token');\n        this.props.history.push('/login')\n        notification['success']({\n            message: '通知',\n            description:\n                '注销成功',\n            duration: 2,\n        });\n    };\n    modify(){\n        notification['success']({\n            message: '通知',\n            description:\n                '注销成功',\n            duration: 2,\n        });\n    }\n\n    menu = (\n        <Menu>\n            <Menu.Item>\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"\">\n                    个人中心\n                </a>\n            </Menu.Item>\n            <Menu.Item>\n                <a target=\"_blank\" rel=\"noopener noreferrer\" onClick={() => this.modify()} >\n                    修改密码\n                </a>\n            </Menu.Item>\n            <Menu.Item>\n                <a target=\"_blank\" rel=\"noopener noreferrer\" onClick={() => this.logout()}>\n                    注销\n                </a>\n            </Menu.Item>\n        </Menu>\n    );\n\n\n    render() {\n        return <div className=\"header d-print-none\">\n            <div className=\"header-container\">\n                <div className=\"header-body\">\n                    <div className=\"header-body-left\">\n                        <ul className=\"navbar-nav\">\n                            <li className=\"nav-item navigation-toggler\">\n                                <a href=\"#\" className=\"nav-link\">\n                                    <i className=\"ti-menu\"></i>\n                                </a>\n                            </li>\n                            <li className=\"nav-item\">\n                                <div className=\"header-search-form\">\n                                    <form>\n                                        <div className=\"input-group\">\n                                            <div className=\"input-group-prepend\">\n                                                <button className=\"btn\">\n                                                    <i className=\"ti-search\"></i>\n                                                </button>\n                                            </div>\n                                            <input type=\"text\" id=\"search\" className=\"form-control\"\n                                                   placeholder=\"Search something...\"/>\n                                            <div className=\"input-group-append\">\n                                                <button className=\"btn header-search-close-btn\">\n                                                    <i data-feather=\"x\"></i>\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </form>\n                                </div>\n                            </li>\n                        </ul>\n                    </div>\n\n                    <div className=\"header-body-right\">\n                        <ul className=\"navbar-nav\">\n                            <li className=\"nav-item\">\n                                <a href=\"#\" className=\"nav-link mobile-header-search-btn\" title=\"Search\">\n                                    <i className=\"ti-search\"></i>\n                                </a>\n                            </li>\n                            <li className=\"nav-item\">\n                                <a href=\"#\" className=\"nav-link\" title=\"Dark\">\n                                    <i className=\"fa fa-moon-o\"></i>\n                                </a>\n                            </li>\n\n                            <li className=\"nav-item dropdown\">\n                                <a href=\"#\" className=\"nav-link nav-link-notify\" title=\"Notifications\"\n                                   data-toggle=\"dropdown\">\n                                    <i className=\"ti-bell\"></i>\n                                </a>\n                                <div className=\"dropdown-menu dropdown-menu-right dropdown-menu-big\">\n                                    <div className=\"bg-primary px-3 py-3\">\n                                        <h6 className=\"mb-0\">Notifications</h6>\n                                    </div>\n                                    <div className=\"dropdown-scroll\">\n                                        <ul className=\"list-group list-group-flush\">\n                                            <li>\n                                                <a href=\"#\" className=\"list-group-item d-flex hide-show-toggler\">\n                                                    <div>\n                                                        <figure className=\"avatar mr-3\">\n                                                            <span\n                                                                className=\"avatar-title bg-secondary-bright text-secondary rounded-circle\">\n                                                                <i className=\"ti-server\"></i>\n                                                            </span>\n                                                        </figure>\n                                                    </div>\n                                                    <div className=\"flex-grow-1\">\n                                                        <p className=\"mb-0\">\n                                                            Your storage space is running low!\n                                                            <i title=\"Mark as unread\" data-toggle=\"tooltip\"\n                                                               className=\"hide-show-toggler-item fa fa-check font-size-11 position-absolute right-0 top-0 mr-3 mt-3\"></i>\n                                                        </p>\n                                                        <span className=\"text-muted small\">4 sec ago</span>\n                                                    </div>\n                                                </a>\n                                            </li>\n                                            <li>\n                                                <a href=\"#\" className=\"list-group-item d-flex hide-show-toggler\">\n                                                    <div>\n                                                        <figure className=\"avatar mr-3\">\n                                                            <img\n                                                                src=\"https://cdn.jsdelivr.net/gh/WendyBoys/oss/img/icon.png\"\n                                                                className=\"rounded-circle\" alt=\"avatar\"/>\n                                                        </figure>\n                                                    </div>\n                                                    <div>\n                                                        <p className=\"mb-0\">\n                                                            <span className=\"text-primary\">Jonny Richie</span> uploaded\n                                                            new\n                                                            files\n                                                            <i title=\"Mark as read\" data-toggle=\"tooltip\"\n                                                               className=\"hide-show-toggler-item fa fa-circle-o font-size-11 position-absolute right-0 top-0 mr-3 mt-3\"></i>\n                                                        </p>\n                                                        <span className=\"text-muted small\">20 min ago</span>\n                                                    </div>\n                                                </a>\n                                            </li>\n                                            <li className=\"text-divider text-center small pb-2 px-3\">\n                                                <span>Old notifications</span>\n                                            </li>\n                                            <li>\n                                                <a href=\"#\" className=\"list-group-item d-flex hide-show-toggler\">\n                                                    <div>\n                                                        <figure className=\"avatar mr-3\">\n                                                            <span\n                                                                className=\"avatar-title bg-info-bright text-info rounded-circle\">\n                                                                <i className=\"fa fa-cloud-upload\"></i>\n                                                            </span>\n                                                        </figure>\n                                                    </div>\n                                                    <div className=\"flex-grow-1\">\n                                                        <p className=\"mb-0\">\n                                                            Upgrade plan\n                                                            <i title=\"Mark as unread\" data-toggle=\"tooltip\"\n                                                               className=\"hide-show-toggler-item fa fa-check font-size-11 position-absolute right-0 top-0 mr-3 mt-3\"></i>\n                                                        </p>\n                                                        <span className=\"text-muted small\">45 sec ago</span>\n                                                    </div>\n                                                </a>\n                                            </li>\n                                            <li>\n                                                <a href=\"#\" className=\"list-group-item d-flex hide-show-toggler\">\n                                                    <div>\n                                                        <figure className=\"avatar mr-3\">\n                                                            <span\n                                                                className=\"avatar-title bg-success-bright text-success rounded-circle\">\n                                                                <i className=\"ti-share\"></i>\n                                                            </span>\n                                                        </figure>\n                                                    </div>\n                                                    <div className=\"flex-grow-1\">\n                                                        <p className=\"mb-0\">\n                                                            A file has been shared\n                                                            <i title=\"Mark as unread\" data-toggle=\"tooltip\"\n                                                               className=\"hide-show-toggler-item fa fa-check font-size-11 position-absolute right-0 top-0 mr-3 mt-3\"></i>\n                                                        </p>\n                                                        <span className=\"text-muted small\">58 sec ago</span>\n                                                    </div>\n                                                </a>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                    <div className=\"px-3 py-2 text-right border-top\">\n                                        <ul className=\"list-inline small\">\n                                            <li className=\"list-inline-item mb-0\">\n                                                <a href=\"#\">Mark All Read</a>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </div>\n                            </li>\n\n                            <li className=\"nav-item dropdown\">\n                                <a href=\"#\" className=\"nav-link\" title=\"Settings\" data-sidebar-target=\"#settings\">\n                                    <i className=\"ti-settings\"></i>\n                                </a>\n                            </li>\n\n                            <li className=\"nav-item dropdown\">\n                                <Dropdown overlay={this.menu} placement=\"topRight\">\n                                    <a href=\"#\" className=\"nav-link profile-nav-link dropdown-toggle\" title=\"User menu\">\n                                        <span className=\"mr-2 d-sm-inline d-none username\">{this.state.username}</span>\n                                        <figure className=\"avatar avatar-sm\">\n                                            <img src={this.state.iconUrl}\n                                                 className=\"rounded-circle\" alt=\"avatar\"/>\n                                        </figure>\n                                    </a>\n                                </Dropdown>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n\n                <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item header-toggler\">\n                        <a href=\"#\" className=\"nav-link\">\n                            <i className=\"ti-arrow-down\"></i>\n                        </a>\n                    </li>\n                    <li className=\"nav-item sidebar-toggler\">\n                        <a href=\"#\" className=\"nav-link\">\n                            <i className=\"ti-cloud\"></i>\n                        </a>\n                    </li>\n                </ul>\n            </div>\n        </div>\n\n\n    }\n}","D:\\trave\\dtrun\\src\\main\\react\\src\\components\\datasource\\Update.jsx",["116","117","118","119","120"],"import React from 'react';\r\nimport Nav from '../Nav';\r\nimport axios from 'axios';\r\nimport Header from '../Header'\r\nimport Right from '../Right'\r\nimport {Form, Input, Button, Select} from 'antd';\r\nimport {notification} from 'antd';\r\n\r\nconst {Option} = Select;\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 3,\r\n    },\r\n    wrapperCol: {\r\n        span: 16,\r\n    },\r\n};\r\n\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 3,\r\n        span: 16,\r\n    },\r\n};\r\nexport default class Update extends React.Component {\r\n    formRef = React.createRef();\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n\r\n\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n\r\n        this.getDts()\r\n\r\n    }\r\n\r\n\r\n    getDts() {\r\n        axios.get('http://localhost/dtsource/getDtSourceById?id=' + this.props.match.params.id).then((response) => {\r\n            const result = response.data.message;\r\n            if (result == 'Success') {\r\n                const data = response.data.data;\r\n                const dtSourceJson = JSON.parse(data.dtSourceJson);\r\n                this.formRef.current.setFieldsValue(\r\n                    {\r\n                        dtsName: data.dtSourceName,\r\n                        dtsType: data.dtSourceType,\r\n                        accessKey: dtSourceJson.accessKey,\r\n                        accessSecret: dtSourceJson.accessSecret,\r\n                        region: dtSourceJson.region\r\n                    },\r\n                );\r\n            } else {\r\n                notification['error']({\r\n                    message: '通知',\r\n                    description:\r\n                        '获取数据源信息失败，请稍后重试',\r\n                    duration: 1,\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    test() {\r\n        this.formRef.current.validateFields()\r\n            .then(values => {\r\n                axios.post('http://localhost/dtsource/testconnection', {\r\n                    dataSourceType: values.dtsType,\r\n                    accessKey: values.accessKey,\r\n                    accessSecret: values.accessSecret,\r\n                    region: values.region,\r\n                }).then((response) => {\r\n                    var result = response.data.message;\r\n                    if (result == 'Success') {\r\n                        notification['success']({\r\n                            message: '通知',\r\n                            description:\r\n                                '测试成功',\r\n                            duration: 1,\r\n                        });\r\n                    } else {\r\n                        notification['error']({\r\n                            message: '通知',\r\n                            description:\r\n                                '测试失败，请检查参数',\r\n                            duration: 1,\r\n                        });\r\n                    }\r\n                });\r\n            })\r\n            .catch(errorInfo => {\r\n\r\n            });\r\n\r\n    }\r\n\r\n\r\n    quit() {\r\n        this.props.history.goBack();\r\n\r\n    }\r\n\r\n\r\n    onFinish = (values) => {\r\n        axios.post('http://localhost/dtsource/update', {\r\n            id: this.props.match.params.id,\r\n            dataSourceName: values.dtsName,\r\n            dataSourceType: values.dtsType,\r\n            secretId: values.accessKey,\r\n            secretKey: values.accessSecret,\r\n            region: values.region,\r\n        }).then((response) => {\r\n            var result = response.data.message;\r\n            if (result == 'Success') {\r\n                notification['success']({\r\n                    message: '通知',\r\n                    description:\r\n                        '修改成功',\r\n                    duration: 1,\r\n                });\r\n                this.props.history.push('/datasource/show');\r\n            } else {\r\n                notification['error']({\r\n                    message: '通知',\r\n                    description:\r\n                        '修改失败,请重试',\r\n                    duration: 1,\r\n                });\r\n\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n    render() {\r\n        return <div className=\"content-wrapper\">\r\n            <Nav/>\r\n            <div className=\"content-body\">\r\n\r\n                <div id=\"createdts\" className=\"content\">\r\n                    <div className=\"page-header d-flex justify-content-between\">\r\n                        <h2>修改数据源</h2>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-xl-12 components-sidebar\">\r\n\r\n                            <Form\r\n                                {...layout}\r\n                                ref={this.formRef}\r\n                                name=\"basic\"\r\n                                initialValues={{\r\n                                    remember: true,\r\n                                }}\r\n                                onFinish={this.onFinish}\r\n\r\n                            >\r\n                                <Form.Item\r\n                                    label=\"数据源名称\"\r\n                                    name=\"dtsName\"\r\n\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                            message: '请输入数据源名称',\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input placeholder=\"请输入数据源名称\"/>\r\n                                </Form.Item>\r\n                                <Form.Item name=\"dtsType\" label=\"数据源类型\" rules={[{required: true, message: '请选择数据源类型'}]}>\r\n                                    <Select\r\n                                        placeholder=\"请选择数据源类型\"\r\n                                        onChange={this.onGenderChange}\r\n                                        allowClear\r\n                                    >\r\n                                        <Option value=\"cos\">COS</Option>\r\n                                        <Option value=\"oss\">OSS</Option>\r\n                                        <Option value=\"obs\">OBS</Option>\r\n                                        <Option value=\"bos\">BOS</Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    label=\"AccessKey\"\r\n                                    name=\"accessKey\"\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                            message: '请输入AccessKey',\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input placeholder=\"请输入AccessKey\"/>\r\n                                </Form.Item>\r\n\r\n                                <Form.Item\r\n                                    label=\"AccessSecret\"\r\n                                    name=\"accessSecret\"\r\n                                    rules={[\r\n                                        {\r\n                                            required: true,\r\n                                            message: '请输入AccessSecret',\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input placeholder=\"请输入AccessSecret\"/>\r\n                                </Form.Item>\r\n\r\n\r\n                                <Form.Item\r\n                                    label=\"地域\"\r\n                                    name=\"region\"\r\n                                    rules={[\r\n                                        {\r\n\r\n                                            message: '请输入地域',\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input placeholder=\"请输入地域\"/>\r\n                                </Form.Item>\r\n\r\n                                <Form.Item {...tailLayout}>\r\n                                    <Button type=\"primary\" htmlType=\"submit\" style={{marginRight: '10px'}}>\r\n                                        确定\r\n                                    </Button>\r\n                                    <Button htmlType=\"button\" onClick={() => this.test()} style={{marginRight: '10px'}}>\r\n                                        测试\r\n                                    </Button>\r\n                                    <Button htmlType=\"button\" onClick={() => this.quit()}>\r\n                                        取消\r\n                                    </Button>\r\n                                </Form.Item>\r\n                            </Form>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n\r\n\r\n    }\r\n}","D:\\trave\\dtrun\\src\\main\\react\\src\\components\\datasource\\Modify.jsx",["121","122","123","124"],{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":2,"column":24,"nodeType":"131","messageId":"132","endLine":2,"endColumn":32},{"ruleId":"129","severity":1,"message":"133","line":8,"column":8,"nodeType":"131","messageId":"132","endLine":8,"endColumn":18},{"ruleId":"129","severity":1,"message":"130","line":5,"column":25,"nodeType":"131","messageId":"132","endLine":5,"endColumn":33},{"ruleId":"129","severity":1,"message":"134","line":6,"column":8,"nodeType":"131","messageId":"132","endLine":6,"endColumn":14},{"ruleId":"129","severity":1,"message":"135","line":7,"column":8,"nodeType":"131","messageId":"132","endLine":7,"endColumn":13},{"ruleId":"129","severity":1,"message":"136","line":5,"column":30,"nodeType":"131","messageId":"132","endLine":5,"endColumn":38},{"ruleId":"137","severity":1,"message":"138","line":26,"column":24,"nodeType":"139","messageId":"140","endLine":26,"endColumn":26},{"ruleId":"137","severity":1,"message":"138","line":27,"column":24,"nodeType":"139","messageId":"140","endLine":27,"endColumn":26},{"ruleId":"137","severity":1,"message":"138","line":31,"column":31,"nodeType":"139","messageId":"140","endLine":31,"endColumn":33},{"ruleId":"141","severity":1,"message":"142","line":100,"column":37,"nodeType":"143","endLine":100,"endColumn":78},{"ruleId":"129","severity":1,"message":"144","line":3,"column":8,"nodeType":"131","messageId":"132","endLine":3,"endColumn":13},{"ruleId":"129","severity":1,"message":"145","line":4,"column":8,"nodeType":"131","messageId":"132","endLine":4,"endColumn":14},{"ruleId":"141","severity":1,"message":"142","line":27,"column":45,"nodeType":"143","endLine":27,"endColumn":75},{"ruleId":"146","severity":1,"message":"147","line":11,"column":21,"nodeType":"143","endLine":11,"endColumn":39},{"ruleId":"141","severity":1,"message":"142","line":15,"column":29,"nodeType":"143","endLine":15,"endColumn":100},{"ruleId":"141","severity":1,"message":"142","line":31,"column":29,"nodeType":"143","endLine":31,"endColumn":100},{"ruleId":"141","severity":1,"message":"142","line":47,"column":29,"nodeType":"143","endLine":47,"endColumn":100},{"ruleId":"141","severity":1,"message":"142","line":63,"column":29,"nodeType":"143","endLine":63,"endColumn":100},{"ruleId":"129","severity":1,"message":"134","line":6,"column":8,"nodeType":"131","messageId":"132","endLine":6,"endColumn":14},{"ruleId":"129","severity":1,"message":"135","line":7,"column":8,"nodeType":"131","messageId":"132","endLine":7,"endColumn":13},{"ruleId":"137","severity":1,"message":"138","line":47,"column":32,"nodeType":"139","messageId":"140","endLine":47,"endColumn":34},{"ruleId":"137","severity":1,"message":"138","line":88,"column":24,"nodeType":"139","messageId":"140","endLine":88,"endColumn":26},{"ruleId":"137","severity":1,"message":"138","line":24,"column":24,"nodeType":"139","messageId":"140","endLine":24,"endColumn":26},{"ruleId":"137","severity":1,"message":"138","line":60,"column":24,"nodeType":"139","messageId":"140","endLine":60,"endColumn":26},{"ruleId":"137","severity":1,"message":"138","line":80,"column":24,"nodeType":"139","messageId":"140","endLine":80,"endColumn":26},{"ruleId":"129","severity":1,"message":"148","line":3,"column":25,"nodeType":"131","messageId":"132","endLine":3,"endColumn":31},{"ruleId":"129","severity":1,"message":"149","line":3,"column":33,"nodeType":"131","messageId":"132","endLine":3,"endColumn":38},{"ruleId":"137","severity":1,"message":"138","line":19,"column":24,"nodeType":"139","messageId":"140","endLine":19,"endColumn":26},{"ruleId":"141","severity":1,"message":"142","line":51,"column":17,"nodeType":"143","endLine":51,"endColumn":70},{"ruleId":"141","severity":1,"message":"150","line":56,"column":17,"nodeType":"143","endLine":56,"endColumn":93},{"ruleId":"141","severity":1,"message":"150","line":61,"column":17,"nodeType":"143","endLine":61,"endColumn":92},{"ruleId":"141","severity":1,"message":"142","line":76,"column":33,"nodeType":"143","endLine":76,"endColumn":66},{"ruleId":"141","severity":1,"message":"142","line":106,"column":33,"nodeType":"143","endLine":106,"endColumn":106},{"ruleId":"141","severity":1,"message":"142","line":111,"column":33,"nodeType":"143","endLine":111,"endColumn":79},{"ruleId":"141","severity":1,"message":"142","line":117,"column":33,"nodeType":"143","endLine":118,"endColumn":59},{"ruleId":"141","severity":1,"message":"142","line":128,"column":49,"nodeType":"143","endLine":128,"endColumn":114},{"ruleId":"141","severity":1,"message":"142","line":148,"column":49,"nodeType":"143","endLine":148,"endColumn":114},{"ruleId":"141","severity":1,"message":"142","line":172,"column":49,"nodeType":"143","endLine":172,"endColumn":114},{"ruleId":"141","severity":1,"message":"142","line":192,"column":49,"nodeType":"143","endLine":192,"endColumn":114},{"ruleId":"141","severity":1,"message":"142","line":216,"column":49,"nodeType":"143","endLine":216,"endColumn":61},{"ruleId":"141","severity":1,"message":"142","line":224,"column":33,"nodeType":"143","endLine":224,"endColumn":115},{"ruleId":"141","severity":1,"message":"142","line":231,"column":37,"nodeType":"143","endLine":231,"endColumn":121},{"ruleId":"141","severity":1,"message":"142","line":246,"column":25,"nodeType":"143","endLine":246,"endColumn":58},{"ruleId":"141","severity":1,"message":"142","line":251,"column":25,"nodeType":"143","endLine":251,"endColumn":58},{"ruleId":"129","severity":1,"message":"134","line":4,"column":8,"nodeType":"131","messageId":"132","endLine":4,"endColumn":14},{"ruleId":"129","severity":1,"message":"135","line":5,"column":8,"nodeType":"131","messageId":"132","endLine":5,"endColumn":13},{"ruleId":"137","severity":1,"message":"138","line":47,"column":24,"nodeType":"139","messageId":"140","endLine":47,"endColumn":26},{"ruleId":"137","severity":1,"message":"138","line":80,"column":32,"nodeType":"139","messageId":"140","endLine":80,"endColumn":34},{"ruleId":"137","severity":1,"message":"138","line":120,"column":24,"nodeType":"139","messageId":"140","endLine":120,"endColumn":26},{"ruleId":"129","severity":1,"message":"151","line":3,"column":29,"nodeType":"131","messageId":"132","endLine":3,"endColumn":36},{"ruleId":"129","severity":1,"message":"152","line":4,"column":9,"nodeType":"131","messageId":"132","endLine":4,"endColumn":21},{"ruleId":"129","severity":1,"message":"153","line":4,"column":23,"nodeType":"131","messageId":"132","endLine":4,"endColumn":35},{"ruleId":"137","severity":1,"message":"138","line":34,"column":24,"nodeType":"139","messageId":"140","endLine":34,"endColumn":26},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Datasource' is defined but never used.","'Header' is defined but never used.","'Right' is defined but never used.","'Checkbox' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'axios' is defined but never used.","'cookie' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Button' is defined but never used.","'Space' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'message' is defined but never used.","'UserOutlined' is defined but never used.","'LockOutlined' is defined but never used.","no-global-assign","no-unsafe-negation"]